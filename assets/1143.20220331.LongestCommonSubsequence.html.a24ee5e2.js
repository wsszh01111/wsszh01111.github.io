import{r as p,o as t,c as e,a as n,d as o,F as c,b as s,e as u}from"./app.6a81c09a.js";import{_ as l}from"./plugin-vue_export-helper.21dcd24c.js";const r={},i={id:"_1143-\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217",tabindex:"-1"},k=n("a",{class:"header-anchor",href:"#_1143-\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217","aria-hidden":"true"},"#",-1),b=s(),d={href:"https://leetcode-cn.com/problems/longest-common-subsequence/",target:"_blank",rel:"noopener noreferrer"},m=s("1143. \u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217"),h=u(`<h2 id="\u601D\u8DEF1" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF1" aria-hidden="true">#</a> \u601D\u8DEF1</h2><p>\u7ECF\u5178\u7684\u52A8\u6001\u89C4\u5212\u9898\u76EE\u3002<code>dp[i][j]</code>\u7684\u5B9A\u4E49\u662F<code>text1[0..i-1]</code>\u548C<code>text2[0..j-1]</code>\u7684\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217\u957F\u5EA6\uFF0C\u5982\u679C\u67D0\u4E00\u4F4D\u76F8\u7B49\uFF0C\u5219\u5FC5\u7136\u5728\u6700\u957F\u516C\u5171\u5E8F\u5217\u4E2D\uFF0C\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217\u7684\u957F\u5EA6\u5C31\u53EF\u4EE5\u52A01\u4E86\uFF1B\u5982\u679C\u4E0D\u76F8\u7B49\uFF0C\u90A3\u4E48\u9009<code>max(dp[i-1][j],dp[i][j-1])</code>\u5C31\u884C\u4E86\uFF0C\u8BED\u4E49\u4E0A\u8BB2\u5C31\u662F\u9009\u53D6i\u6216j\u56DE\u9000\u4E00\u4F4D\u8FD9\u4E24\u79CD\u60C5\u51B5\u4E2D\u6700\u957F\u516C\u5171\u5E8F\u5217\u8F83\u957F\u7684\u503C\u3002base case\u5C31\u662F<code>dp[0][...]</code>\u4EE5\u53CA<code>dp[...][0]</code>\uFF0C\u5BF9\u5E94\u7684\u5C31\u662F\u4E24\u4E2A\u5B57\u7B26\u4E32\u4E2D\u4EFB\u4E00\u5B57\u7B26\u4E32\u662F\u7A7A\u5B57\u7B26\u4E32\u7684\u60C5\u51B5\uFF0C\u5E76\u4E14\u5C06dp\u7684\u957F\u5EA6\u8BBE\u7F6E\u7684\u6BD4text1\u548Ctext2\u7684\u957F\u5EA6\u957F\u4E00\u4F4D\uFF0C\u5728\u5B9E\u9645\u7F16\u7801\u4E2D\u4E5F\u66F4\u65B9\u4FBF\u5904\u7406</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">longestCommonSubsequence</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">text1<span class="token punctuation">,</span> text2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> dp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>text1<span class="token punctuation">.</span>length<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>text2<span class="token punctuation">.</span>length<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> text1<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> text2<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>text1<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">===</span> text2<span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">+</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> dp<span class="token punctuation">[</span>text1<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">[</span>text2<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h2 id="\u601D\u8DEF2" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF2" aria-hidden="true">#</a> \u601D\u8DEF2</h2><p>\u9012\u5F52\uFF0C\u5176\u5B9E\u8FD9\u4E2A\u624D\u662F\u672C\u80FD\u7684\u601D\u8DEF\uFF0C\u53EA\u4E0D\u8FC7\u52A8\u6001\u89C4\u5212\u505A\u591A\u4E86\u81EA\u7136\u5C31\u76F4\u63A5\u5F80\u52A8\u6001\u89C4\u5212\u4E0A\u9760\u4E86\uFF1B\u5C06\u95EE\u9898\u62C6\u89E3\u6210\u5B50\u95EE\u9898\uFF0C\u5B50\u95EE\u9898\u7684\u5B9A\u4E49\u662F\u6C42\u89E3<code>text1[0..i]</code>\u548C<code>text2[0..j]</code>\u7684\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217\uFF0C\u9664\u4E86\u9012\u5F52\u6846\u67B6\u7684\u5E38\u89C4\u601D\u8DEF\u4E4B\u5916\uFF0C\u6838\u5FC3\u5728\u4E8E\u7406\u89E3\u9898\u610F\uFF0C\u5F97\u51FA\u5982\u679Cij\u76F8\u7B49\uFF0C\u90A3\u4E48ij\u5C5E\u4E8E\u516C\u5171\u5B50\u5E8F\u5217\uFF08\u4E0D\u4E00\u5B9A\u662F\u6574\u4E2A\u95EE\u9898\u4E2D\u6700\u957F\u7684\uFF09\uFF0C\u5982\u679C\u4E0D\u76F8\u7B49\uFF0C\u5219\u6700\u957F\u7684\u516C\u5171\u5B50\u5E8F\u5217\u7684\u957F\u5EA6\u7531\u4E0B\u4E00\u7EA7\u7684\u5B50\u95EE\u9898\u51B3\u5B9A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">longestCommonSubsequence</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">text1<span class="token punctuation">,</span> text2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  
  <span class="token doc-comment comment">/**
   * \u8FD4\u56DEtext1[0..i] text2[0..j]\u7684\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217\u957F\u5EA6
   */</span>
  <span class="token keyword">function</span> <span class="token function">recursion</span><span class="token punctuation">(</span><span class="token parameter">i<span class="token punctuation">,</span> j</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> j <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token number">0</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>text1<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> text2<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">recursion</span><span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span> <span class="token comment">// \u76F8\u7B49\u7684\u8BDD\u8BF4\u660E\u5728\u516C\u5171\u5B50\u5E8F\u5217\u4E2D</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token function">recursion</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">recursion</span><span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">)</span> 
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token function">recursion</span><span class="token punctuation">(</span>text1<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> text2<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div>`,6);function x(f,j){const a=p("ExternalLinkIcon");return t(),e(c,null,[n("h1",i,[k,b,n("a",d,[m,o(a)])]),h],64)}var y=l(r,[["render",x]]);export{y as default};
