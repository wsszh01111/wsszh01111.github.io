import{r as p,o as t,c as e,a as n,d as o,F as c,b as s,e as r}from"./app.6a81c09a.js";import{_ as l}from"./plugin-vue_export-helper.21dcd24c.js";const u={},i={id:"_14-\u6700\u957F\u516C\u5171\u524D\u7F00",tabindex:"-1"},k=n("a",{class:"header-anchor",href:"#_14-\u6700\u957F\u516C\u5171\u524D\u7F00","aria-hidden":"true"},"#",-1),m=s(),b={href:"https://leetcode-cn.com/problems/longest-common-prefix/",target:"_blank",rel:"noopener noreferrer"},d=s("14. \u6700\u957F\u516C\u5171\u524D\u7F00"),f=r(`<h2 id="\u601D\u8DEF1" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF1" aria-hidden="true">#</a> \u601D\u8DEF1</h2><p>\u516C\u5171\u524D\u7F00\u80AF\u5B9A\u662F\u8D8A\u6BD4\u8F83\u8D8A\u5C0F\u7684 \u56E0\u6B64\u5148\u7528\u524D\u4E24\u4E2A\u6BD4\u8F83 \u6BD4\u8F83\u51FA\u7ED3\u679C\u540E\u518D\u4F9D\u6B21\u8DDF\u540E\u9762\u7684\u8FDB\u884C\u6BD4\u8F83 \u6700\u5DEE\u65F6\u95F4\u590D\u6742\u5EA6\u662FO(N*M) M\u4E3A\u5B57\u7B26\u4E32\u6700\u5927\u957F\u5EA6 \u5982\u679CN\u6216M\u662F\u5E38\u6570\u9879 \u5219\u65F6\u95F4\u590D\u6742\u5EA6\u662FO(N) \u5982\u679C\u90FD\u4E0D\u662F \u5219\u65F6\u95F4\u590D\u6742\u5EA6\u662FO(N**2)</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">longestCommonPrefix</span><span class="token punctuation">(</span><span class="token parameter">strList</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>strList<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string">&#39;&#39;</span>

  <span class="token keyword">function</span> <span class="token function">getCommonPrefix</span><span class="token punctuation">(</span><span class="token parameter">str1<span class="token punctuation">,</span> str2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> len <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>str1<span class="token punctuation">.</span>length<span class="token punctuation">,</span> str2<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
    <span class="token keyword">let</span> commonPrefix <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>str1<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!==</span> str2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">return</span> commonPrefix
      commonPrefix <span class="token operator">+=</span> str1<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> commonPrefix
  <span class="token punctuation">}</span>

  <span class="token keyword">let</span> commonPrefix <span class="token operator">=</span> strList<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> strList<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
    commonPrefix <span class="token operator">=</span> <span class="token function">getCommonPrefix</span><span class="token punctuation">(</span>strList<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> commonPrefix<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>commonPrefix<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> commonPrefix <span class="token comment">// \u5982\u679C\u67D0\u6B21\u5FAA\u73AF\u540E\u6CA1\u6709\u516C\u5171\u524D\u7F00\u4E86 \u8BF4\u660E\u540E\u7EED\u4E5F\u4E0D\u4F1A\u6709\u4E86 \u63D0\u524D\u8FD4\u56DE\u5373\u53EF</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> commonPrefix
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div>`,3);function _(h,x){const a=p("ExternalLinkIcon");return t(),e(c,null,[n("h1",i,[k,m,n("a",b,[d,o(a)])]),f],64)}var y=l(u,[["render",_]]);export{y as default};
