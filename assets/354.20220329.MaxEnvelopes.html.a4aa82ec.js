import{r as t,o as e,c as o,a as n,d as p,F as c,b as s,e as l}from"./app.6a81c09a.js";import{_ as u}from"./plugin-vue_export-helper.21dcd24c.js";const r={},k={id:"_354-\u4FC4\u7F57\u65AF\u5957\u5A03\u4FE1\u5C01\u95EE\u9898",tabindex:"-1"},i=n("a",{class:"header-anchor",href:"#_354-\u4FC4\u7F57\u65AF\u5957\u5A03\u4FE1\u5C01\u95EE\u9898","aria-hidden":"true"},"#",-1),b=s(),m={href:"https://leetcode-cn.com/problems/russian-doll-envelopes/",target:"_blank",rel:"noopener noreferrer"},d=s("354. \u4FC4\u7F57\u65AF\u5957\u5A03\u4FE1\u5C01\u95EE\u9898"),h=n("h2",{id:"\u601D\u8DEF1",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u601D\u8DEF1","aria-hidden":"true"},"#"),s(" \u601D\u8DEF1")],-1),_=s("\u5177\u4F53\u7684\u89E3\u6CD5\u662F\u770B\u4E86"),f={href:"https://labuladong.github.io/zgnb/3/15/17/",target:"_blank",rel:"noopener noreferrer"},w=s("\u4E8C\u7EF4\u9012\u589E\u5B50\u5E8F\u5217\uFF1A\u4FE1\u5C01\u5D4C\u5957\u95EE\u9898"),v=s("\u624Dget\u5230\u7684\uFF0C\u601D\u8DEF\u771F\u662Fnp\u3002\u8FD9\u9898\u672C\u8D28\u4E0A\u8FD8\u662F\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217\uFF0C\u89E3\u9898\u6838\u5FC3\u5728\u4E8E\u6392\u5E8F\uFF0C\u5347\u5E8F\u6392\u5BBD\u964D\u5E8F\u6392\u9AD8\uFF08\u53CD\u4E4B\u4EA6\u7136\uFF09\uFF0C\u5347\u5E8F\u4FDD\u8BC1\u5BBD\u662F\u589E\u957F\u7684\uFF0C\u7531\u4E8E\u76F8\u540C\u5BBD\u5EA6\u7684\u4FE1\u5C01\u4E0D\u80FD\u88C5\u5165\uFF0C\u56E0\u6B64\u964D\u5E8F\u4FDD\u8BC1\u5728\u53D6\u9012\u589E\u5B50\u5E8F\u5217\u7684\u65F6\u5019\u80FD\u591F\u53D6\u5230\u6700\u5927\u503C\u3002"),y=l(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">maxEnvelopes</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">envelopes</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>envelopes<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">1</span>

  envelopes<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">===</span> b<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">?</span> b<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">:</span> a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> b<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

  <span class="token keyword">const</span> dp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>envelopes<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token keyword">let</span> max <span class="token operator">=</span> <span class="token number">1</span>

  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> dp<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> dpI <span class="token operator">=</span> i
    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">--</span>dpI <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>envelopes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> envelopes<span class="token punctuation">[</span>dpI<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>dpI<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    max <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>max<span class="token punctuation">,</span> dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> max
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h2 id="\u601D\u8DEF2" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF2" aria-hidden="true">#</a> \u601D\u8DEF2</h2><p>\u7528\u52A8\u6001\u89C4\u5212\u5904\u7406\u601D\u8DEF\u662F\u6B63\u786E\u7684\uFF0C\u4F46\u662F\u7ADF\u7136\u8D85\u65F6\u4E86\uFF0C\u8FD8\u662F\u9700\u8981\u4E8C\u5206\u6CD5\u8FDB\u884C\u5904\u7406</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">maxEnvelopes</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">envelopes</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> piles <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> n <span class="token operator">=</span> envelopes<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">const</span> top <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span>

  envelopes<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">===</span> b<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">?</span> b<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">:</span> a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> b<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> poker <span class="token operator">=</span> envelopes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> right <span class="token operator">=</span> piles<span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> mid <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>left <span class="token operator">+</span> right<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>top<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">&gt;=</span> poker<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        right <span class="token operator">=</span> mid<span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        left <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>left <span class="token operator">===</span> piles<span class="token punctuation">)</span> piles<span class="token operator">++</span><span class="token punctuation">;</span>
    top<span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">=</span> poker<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> piles<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div>`,4);function g(x,j){const a=t("ExternalLinkIcon");return e(),o(c,null,[n("h1",k,[i,b,n("a",m,[d,p(a)])]),h,n("p",null,[_,n("a",f,[w,p(a)]),v]),y],64)}var M=u(r,[["render",g]]);export{M as default};
