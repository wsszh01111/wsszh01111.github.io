import{r as p,o as t,c as e,a as n,d as o,F as c,b as s,e as u}from"./app.6a81c09a.js";import{_ as l}from"./plugin-vue_export-helper.21dcd24c.js";const r={},i={id:"_40-\u7EC4\u5408\u603B\u548C-ii",tabindex:"-1"},k=n("a",{class:"header-anchor",href:"#_40-\u7EC4\u5408\u603B\u548C-ii","aria-hidden":"true"},"#",-1),b=s(),m={href:"https://leetcode-cn.com/problems/combination-sum-ii/",target:"_blank",rel:"noopener noreferrer"},d=s("40. \u7EC4\u5408\u603B\u548C II"),h=u(`<h2 id="\u601D\u8DEF1" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF1" aria-hidden="true">#</a> \u601D\u8DEF1</h2><p>\u8DDF90\u9898\u7C7B\u4F3C\uFF0C\u4E5F\u662F\u503C\u91CD\u590D\u7684\u5B50\u96C6\u95EE\u9898\uFF0C\u53EA\u662F\u5BF9\u4E8E\u5B50\u96C6\u7684\u7B5B\u9009\u6761\u4EF6\u53D1\u751F\u4E86\u53D8\u5316\uFF0C\u53E6\u5916\u7531\u4E8E\u63D0\u524D\u6392\u5E8F\u4E86\uFF0C\u56E0\u6B64\u5982\u679C\u603B\u548C\u5927\u4E8E\u7684\u76EE\u6807\u503C\uFF0C\u76F4\u63A5\u7EC8\u6B62\u5F53\u524D\u5206\u652F\u7684\u904D\u5386\u5373\u53EF\uFF0C\u5373<code>if (sum &gt; target) return</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">combinationSum2</span><span class="token punctuation">(</span><span class="token parameter">candidates<span class="token punctuation">,</span> target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token comment">// \u7531\u4E8E\u5019\u9009\u503C\u4F1A\u6709\u91CD\u590D \u6392\u5E8F\u540E\u5BF9\u51B3\u7B56\u6811\u8FDB\u884C\u526A\u679D</span>
  candidates<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">function</span> <span class="token function">backtrack</span><span class="token punctuation">(</span><span class="token parameter">path<span class="token punctuation">,</span> start</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token keyword">const</span> sum <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">acc<span class="token punctuation">,</span> v</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> acc<span class="token operator">+</span>v<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>sum <span class="token operator">&gt;</span> target<span class="token punctuation">)</span> <span class="token keyword">return</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>sum <span class="token operator">===</span> target<span class="token punctuation">)</span> res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>path<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// \u524D\u5E8F\u4F4D\u7F6E\u8FDB\u884C\u5904\u7406</span>
    
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> start<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> candidates<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">!==</span> start <span class="token operator">&amp;&amp;</span> candidates<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> candidates<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">continue</span>

      path<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>candidates<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
      <span class="token function">backtrack</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>
      path<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token function">backtrack</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> res
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div>`,3);function _(f,g){const a=p("ExternalLinkIcon");return t(),e(c,null,[n("h1",i,[k,b,n("a",m,[d,o(a)])]),h],64)}var v=l(r,[["render",_]]);export{v as default};
