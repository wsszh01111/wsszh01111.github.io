import{r as p,o as e,c as t,a as n,d as o,F as c,b as s,e as r}from"./app.6a81c09a.js";import{_ as u}from"./plugin-vue_export-helper.21dcd24c.js";const l={},i={id:"_53-\u6700\u5927\u5B50\u6570\u7EC4\u548C",tabindex:"-1"},k=n("a",{class:"header-anchor",href:"#_53-\u6700\u5927\u5B50\u6570\u7EC4\u548C","aria-hidden":"true"},"#",-1),d=s(),m={href:"https://leetcode-cn.com/problems/maximum-subarray/",target:"_blank",rel:"noopener noreferrer"},b=s("53. \u6700\u5927\u5B50\u6570\u7EC4\u548C"),_=r(`<h2 id="\u601D\u8DEF1" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF1" aria-hidden="true">#</a> \u601D\u8DEF1</h2><p>\u52A8\u6001\u89C4\u5212\u5373\u53EF\uFF0C\u7531\u4E8E\u9898\u610F\u8981\u6C42\u5B50\u6570\u7EC4\u662F\u8FDE\u7EED\u7684\uFF0C<code>dp[i]</code>\u4E0D\u80FD\u662F\u5E38\u89C4\u7684\u5B8C\u5168\u6839\u636E\u9898\u610F\u8BBE\u5B9A\u7684\u957F\u5EA6\u4E3Ai\u7684\u6700\u5927\u5B50\u6570\u7EC4\u548C\uFF0C\u56E0\u4E3A\u6700\u5927\u5B50\u6570\u7EC4\u53EF\u80FD\u8DDF\u5F53\u524D\u4F4D\u7F6Ei\u4E0D\u8FDE\u7EED\uFF0C\u6362\u4E00\u4E2A\u601D\u8DEF\uFF0C\u5C06<code>dp[i]</code>\u5B9A\u4E49\u4E3A\u4EE5<code>nums[i]</code>\u7ED3\u5C3E\u7684\u5B50\u6570\u7EC4\u7684\u6700\u5927\u548C\uFF0C\u6B64\u65F6\u63A8\u5BFC<code>dp[i]</code>\uFF0C\u8981\u4E48\u662F\u5C06<code>nums[i]</code>\u8FFD\u52A0\u5230<code>dp[i-1]</code>\u4E2D\uFF0C\u8981\u4E48\u662F<code>nums[i]</code>\u4F5C\u4E3A\u4E00\u4E2A\u65B0\u7684\u5B50\u6570\u7EC4\u3002\u5F97\u5230\u72B6\u6001\u8F6C\u6362\u65B9\u7A0B<code>dp[i] = max(dp[i-1]+nums[i], nums[i])</code>\uFF0C\u6700\u5927\u5B50\u6570\u7EC4\u548C\u5C31\u662F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">maxSubArray</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">nums</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> nums<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
  <span class="token keyword">const</span> dp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>nums<span class="token punctuation">.</span>length <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token keyword">let</span> max <span class="token operator">=</span> nums<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>

  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> nums<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> dp<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    max <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>max<span class="token punctuation">,</span> dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> max
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div>`,3);function h(x,f){const a=p("ExternalLinkIcon");return e(),t(c,null,[n("h1",i,[k,d,n("a",m,[b,o(a)])]),_],64)}var v=u(l,[["render",h]]);export{v as default};
