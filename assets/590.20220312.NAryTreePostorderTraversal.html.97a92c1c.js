import{r as p,o as e,c as t,a as n,d as o,F as c,b as s,e as l}from"./app.6a81c09a.js";import{_ as r}from"./plugin-vue_export-helper.21dcd24c.js";const u={},i={id:"_590-n-\u53C9\u6811\u7684\u540E\u5E8F\u904D\u5386",tabindex:"-1"},k=n("a",{class:"header-anchor",href:"#_590-n-\u53C9\u6811\u7684\u540E\u5E8F\u904D\u5386","aria-hidden":"true"},"#",-1),d=s(),b={href:"https://leetcode-cn.com/problems/n-ary-tree-postorder-traversal/",target:"_blank",rel:"noopener noreferrer"},m=s("590. N \u53C9\u6811\u7684\u540E\u5E8F\u904D\u5386"),h=l(`<p>\u4F7F\u7528\u9012\u5F52\u601D\u8DEF\u7684\u65F6\u5019\uFF0C\u4EE3\u7801\u7F16\u5199\u4E0A\u548C\u4E8C\u53C9\u6811\u51E0\u4E4E\u4E00\u6A21\u4E00\u6837\uFF08\u53C8\u662F\u9012\u5F52\u53EF\u89E3\u91CA\u6027\u7684\u4E00\u6B21\u4F53\u73B0\uFF09\uFF1B\u4F7F\u7528</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * // Definition for a Node.
 * function Node(val,children) <span class="token punctuation">{</span>
 *    this.val = val;
 *    this.children = children;
 * <span class="token punctuation">}</span>;
 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="\u601D\u8DEF1" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF1" aria-hidden="true">#</a> \u601D\u8DEF1</h2><p>\u4F17\u6240\u5468\u77E5\uFF0C\u6700\u7B80\u5355\u7684\u6811\u7684\u904D\u5386\u7528\u9012\u5F52\u5373\u53EF\uFF0C\u53EF\u89E3\u91CA\u6027\u4E5F\u6BD4\u8F83\u5F3A\uFF0C\u53EA\u4E0D\u8FC7\u5185\u5B58\u6D88\u8017\u4F1A\u5927\u4E00\u4E9B\uFF1B\u4F46\u5B9E\u9645\u4E0A\uFF0C\u7528\u9012\u5F52\u7684\u601D\u8DEF\u5904\u7406\uFF0C\u5176\u672C\u8D28\u4E5F\u662F\u4F7F\u7528\u6808\u5BF9\u6240\u8981\u904D\u5386\u7684\u8282\u70B9\u8FDB\u884C\u6392\u5E8F\uFF0C\u53EA\u4E0D\u8FC7\u8FD9\u4E2A\u6808\u662F\u7531\u8FD0\u884C\u73AF\u5883\u53BB\u7EF4\u62A4\u7684\u51FD\u6570\u6267\u884C\u8C03\u7528\u6808\u7F62\u4E86</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">postorder</span><span class="token punctuation">(</span><span class="token parameter">root</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> order <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>root<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">function</span> <span class="token function">traverse</span><span class="token punctuation">(</span><span class="token parameter">node</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>children<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">for</span><span class="token punctuation">(</span>child <span class="token keyword">of</span> node<span class="token punctuation">.</span>children<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">traverse</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    order<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>val<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token function">traverse</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span>
  <span class="token keyword">return</span> order
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="\u601D\u8DEF2" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF2" aria-hidden="true">#</a> \u601D\u8DEF2</h2><p>\u904D\u5386\u6811\uFF0C\u7528\u4E86\u9012\u5F52\uFF0C\u5FC5\u7136\u8981\u7528\u8FED\u4EE3\u518D\u5199\u4E00\u6B21\u5566</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>
<span class="token keyword">function</span> <span class="token function">postorder</span><span class="token punctuation">(</span><span class="token parameter">root</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>root<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

  <span class="token keyword">const</span> stack <span class="token operator">=</span> <span class="token punctuation">[</span>root<span class="token punctuation">]</span>
  <span class="token keyword">const</span> order <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

  <span class="token comment">// \u4EC5\u4ECE\u6808\u4E2D\u53D6\u5230\u6808\u9876\u8282\u70B9 \u6211\u8BA4\u4E3A\u8FD9\u79CD\u65B9\u5F0F\u7684\u6761\u7406\u6027\u66F4\u6E05\u6670\u4E00\u4E9B \u4F46\u662F\u5728\u9047\u5230\u53F6\u5B50\u8282\u70B9\u7684\u65F6\u5019\u5C31\u4F1A\u989D\u5916\u589E\u52A0\u4E00\u4E9B\u904D\u5386\u6B21\u6570 \u56E0\u6B64\u5C31\u770B\u6743\u8861\u4E86</span>
  <span class="token keyword">while</span><span class="token punctuation">(</span>stack<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> curr <span class="token operator">=</span> stack<span class="token punctuation">.</span><span class="token function">at</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>curr<span class="token punctuation">.</span>children <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>curr<span class="token punctuation">.</span>visited<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> i <span class="token operator">=</span> curr<span class="token punctuation">.</span>children<span class="token punctuation">.</span>length
      <span class="token keyword">while</span><span class="token punctuation">(</span>i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>curr<span class="token punctuation">.</span>children<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// \u4F7F\u7528\u8FED\u4EE3\u4F1A\u4F7F\u5F97\u65E0\u6CD5\u5224\u65AD\u5F53\u524D\u4ECE\u6808\u4E2D\u53D6\u51FA\u7684\u8282\u70B9\u662F\u5426\u5DF2\u7ECF\u88AB\u8BBF\u95EE\u8FC7\u4E86</span>
      <span class="token comment">// \u53EF\u4EE5\u4F7F\u7528\u989D\u5916\u7684Map\u8FDB\u884C\u8BB0\u5F55 \u6211\u8FD9\u8FB9\u5C31\u76F4\u63A5\u5728\u6811\u8282\u70B9\u4E0A\u6302\u4E0A\u662F\u5426\u5DF2\u8BBF\u95EE\u7684\u6807\u8BC6\u4E86</span>
      curr<span class="token punctuation">.</span>visited <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      order<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>curr<span class="token punctuation">.</span>val<span class="token punctuation">)</span>
      stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> order
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div>`,8);function f(v,_){const a=p("ExternalLinkIcon");return e(),t(c,null,[n("h1",i,[k,d,n("a",b,[m,o(a)])]),h],64)}var g=r(u,[["render",f]]);export{g as default};
