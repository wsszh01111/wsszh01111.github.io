import{r as p,o as t,c as e,a as n,d as o,F as c,b as s,e as l}from"./app.6a81c09a.js";import{_ as u}from"./plugin-vue_export-helper.21dcd24c.js";const i={},r={id:"_599-\u4E24\u4E2A\u5217\u8868\u7684\u6700\u5C0F\u7D22\u5F15\u603B\u548C",tabindex:"-1"},k=n("a",{class:"header-anchor",href:"#_599-\u4E24\u4E2A\u5217\u8868\u7684\u6700\u5C0F\u7D22\u5F15\u603B\u548C","aria-hidden":"true"},"#",-1),d=s(),b={href:"https://leetcode-cn.com/problems/minimum-index-sum-of-two-lists/",target:"_blank",rel:"noopener noreferrer"},m=s("599. \u4E24\u4E2A\u5217\u8868\u7684\u6700\u5C0F\u7D22\u5F15\u603B\u548C"),_=l(`<h2 id="\u601D\u8DEF1" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF1" aria-hidden="true">#</a> \u601D\u8DEF1</h2><p>\u7B80\u5355\u7684\u4F7F\u7528hash\u8868\u5373\u53EF</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">findRestaurant</span><span class="token punctuation">(</span><span class="token parameter">list1<span class="token punctuation">,</span> list2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">let</span> min <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token keyword">const</span> list1Map <span class="token operator">=</span> list1<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">acc<span class="token punctuation">,</span> l<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    acc<span class="token punctuation">[</span>l<span class="token punctuation">]</span> <span class="token operator">=</span> i
    <span class="token keyword">return</span> acc
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> list2<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>list1Map<span class="token punctuation">[</span>list2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>i<span class="token operator">+</span>list1Map<span class="token punctuation">[</span>list2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span> min<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        min <span class="token operator">=</span> i<span class="token operator">+</span>list1Map<span class="token punctuation">[</span>list2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> 
        result<span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token number">0</span>
        result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>list2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">+</span>list1Map<span class="token punctuation">[</span>list2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">===</span> min<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>list2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> result
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div>`,3);function h(f,w){const a=p("ExternalLinkIcon");return t(),e(c,null,[n("h1",r,[k,d,n("a",b,[m,o(a)])]),_],64)}var g=u(i,[["render",h]]);export{g as default};
