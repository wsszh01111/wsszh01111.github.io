import{r as p,o as t,c as e,a as n,d as o,F as c,b as s,e as r}from"./app.6a81c09a.js";import{_ as l}from"./plugin-vue_export-helper.21dcd24c.js";const u={},i={id:"_6-z\u5B57\u5F62\u53D8\u6362",tabindex:"-1"},k=n("a",{class:"header-anchor",href:"#_6-z\u5B57\u5F62\u53D8\u6362","aria-hidden":"true"},"#",-1),d=s(),m={href:"https://leetcode-cn.com/problems/zigzag-conversion/",target:"_blank",rel:"noopener noreferrer"},b=s("6. Z\u5B57\u5F62\u53D8\u6362"),h=r(`<h2 id="\u601D\u8DEF1" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF1" aria-hidden="true">#</a> \u601D\u8DEF1</h2><p>\u76F4\u63A5\u6A21\u62DF</p><h2 id="\u601D\u8DEF2" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF2" aria-hidden="true">#</a> \u601D\u8DEF2</h2><p>\u76F4\u63A5\u6784\u9020 \u901A\u8FC7\u7406\u89E3\u9898\u610F\u53EF\u5F97\u6BCF\u4E2A\u503C\u4E4B\u95F4\u7684\u95F4\u9694\u662F\u6709\u5468\u671F\u5173\u7CFB\u7684 \u628A\u5468\u671F\u770B\u505AV\u578B\u800C\u4E0D\u662F\u5012Z\u578B \u5219\u4F1A\u5BF9\u89E3\u9898\u66F4\u4E0E\u5E2E\u52A9</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">zigzagConversion</span><span class="token punctuation">(</span><span class="token parameter">s<span class="token punctuation">,</span> numRows</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>numRows <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> s
  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

  <span class="token keyword">let</span> gap <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">*</span> numRows <span class="token operator">-</span> <span class="token number">2</span> <span class="token comment">// \u5468\u671F</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> numRows <span class="token operator">&amp;&amp;</span> i <span class="token operator">&lt;</span> s<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> middleGap <span class="token operator">=</span> gap <span class="token operator">-</span> i<span class="token operator">*</span><span class="token number">2</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> rowStart <span class="token operator">=</span> i<span class="token punctuation">;</span> rowStart <span class="token operator">&lt;</span> s<span class="token punctuation">.</span>length<span class="token punctuation">;</span> rowStart <span class="token operator">+=</span> gap<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span>rowStart<span class="token punctuation">]</span><span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>middleGap <span class="token operator">!==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> middleGap <span class="token operator">!==</span> gap<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>rowStart<span class="token operator">+</span>middleGap <span class="token operator">&lt;</span> s<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span>rowStart<span class="token operator">+</span>middleGap<span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span> 
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div>`,5);function _(w,f){const a=p("ExternalLinkIcon");return t(),e(c,null,[n("h1",i,[k,d,n("a",m,[b,o(a)])]),h],64)}var v=l(u,[["render",_]]);export{v as default};
