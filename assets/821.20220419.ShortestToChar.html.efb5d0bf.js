import{r as p,o as e,c as t,a as n,d as o,F as c,b as s,e as r}from"./app.6a81c09a.js";import{_ as l}from"./plugin-vue_export-helper.21dcd24c.js";const i={},u={id:"_821-\u5B57\u7B26\u7684\u6700\u77ED\u8DDD\u79BB",tabindex:"-1"},k=n("a",{class:"header-anchor",href:"#_821-\u5B57\u7B26\u7684\u6700\u77ED\u8DDD\u79BB","aria-hidden":"true"},"#",-1),d=s(),b={href:"https://leetcode-cn.com/problems/shortest-distance-to-a-character/",target:"_blank",rel:"noopener noreferrer"},m=s("821. \u5B57\u7B26\u7684\u6700\u77ED\u8DDD\u79BB"),h=r(`<h2 id="\u601D\u8DEF1" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF1" aria-hidden="true">#</a> \u601D\u8DEF1</h2><p>\u6839\u636E\u9898\u610F\uFF0C\u8FD4\u56DE\u503C<code>result</code>\u4E2D\u7684<code>result[i]</code>\u4EE3\u8868\u7740<code>min(s[i]\u8DDD\u79BB\u5DE6\u4FA7c\u7684\u8DDD\u79BB, s[i]\u8DDD\u79BB\u53F3\u4FA7c\u7684\u8DDD\u79BB)</code>\uFF0Cs[i]\u8DDD\u79BB\u5DE6\u4FA7c\u7684\u8DDD\u79BB\u53EF\u4EE5\u901A\u8FC7\u4ECE\u5DE6\u5F00\u59CB\u904D\u5386\u4E00\u904D\uFF0C\u5728\u904D\u5386\u4E2D\u5982\u679C\u78B0\u5230<code>c</code>\uFF0C\u5219\u8BB0\u5F55<code>c</code>\u7684\u4F4D\u7F6E<code>ci</code>\u5E76\u8BA1\u7B97<code>i - ci</code>\uFF0C\u518D\u4ECE\u53F3\u4FA7\u904D\u5386\u4E00\u904D\uFF0C\u5728\u5F97\u5230s[i]\u8DDD\u79BB\u53F3\u4FA7c\u7684\u8DDD\u79BB\u7684\u540C\u65F6\u4E5F\u53EF\u4EE5\u8BA1\u7B97<code>min(s[i]\u8DDD\u79BB\u5DE6\u4FA7c\u7684\u8DDD\u79BB, s[i]\u8DDD\u79BB\u53F3\u4FA7c\u7684\u8DDD\u79BB)</code>\u4E86</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">shortestToChar</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">s<span class="token punctuation">,</span> c</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>length<span class="token punctuation">)</span>

  <span class="token keyword">let</span> ci <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">Infinity</span>
  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> s<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> c<span class="token punctuation">)</span> ci <span class="token operator">=</span> i
    result<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> i <span class="token operator">-</span> ci
  <span class="token punctuation">}</span>

  ci <span class="token operator">=</span> <span class="token number">Infinity</span>
  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> s<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> c<span class="token punctuation">)</span> ci <span class="token operator">=</span> i
    result<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>result<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> ci <span class="token operator">-</span> i<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> result
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div>`,3);function _(f,y){const a=p("ExternalLinkIcon");return e(),t(c,null,[n("h1",u,[k,d,n("a",b,[m,o(a)])]),h],64)}var v=l(i,[["render",_]]);export{v as default};
