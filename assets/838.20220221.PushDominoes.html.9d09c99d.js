import{r as p,o as t,c as e,a as n,d as o,F as c,b as s,e as l}from"./app.6a81c09a.js";import{_ as r}from"./plugin-vue_export-helper.21dcd24c.js";const u={},i={id:"_838-\u63A8\u591A\u7C73\u8BFA",tabindex:"-1"},k=n("a",{class:"header-anchor",href:"#_838-\u63A8\u591A\u7C73\u8BFA","aria-hidden":"true"},"#",-1),b=s(),m={href:"https://leetcode-cn.com/problems/push-dominoes/",target:"_blank",rel:"noopener noreferrer"},d=s("838. \u63A8\u591A\u7C73\u8BFA"),h=l(`<h2 id="\u601D\u8DEF1" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF1" aria-hidden="true">#</a> \u601D\u8DEF1</h2><p>\u6700\u6734\u7D20\u7684\u65B9\u5F0F \u6A21\u62DF\u6574\u4E2A\u63A8\u5012\u8FC7\u7A0B\u56E0\u4E3A\u5DF2\u7ECF\u5012\u5411\u5DE6\u53F3\u7684\u5C31\u4E0D\u4F1A\u518D\u53D8\u52A8 \u6240\u4EE5\u53EA\u9700\u8981\u904D\u5386\u8FD8\u672A\u5012\u7684\u60C5\u51B5\u5373\u53EF \u8981\u8003\u8651\u6C38\u8FDC\u4E0D\u4F1A\u63A8\u5012\u7684\u8FB9\u754C\u60C5\u51B5.L R. R.L L.R \u7528\u4E24\u4E2A\u6570\u7EC4\u8BB0\u5F55\u4E0A\u4E00\u6B21last\u548C\u6700\u65B0\u7684latest</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">pushDominoes</span><span class="token punctuation">(</span><span class="token parameter">dominoes</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> last <span class="token operator">=</span> dominoes<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">let</span> latest <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>dominoes<span class="token punctuation">.</span>length<span class="token punctuation">)</span>

  <span class="token keyword">let</span> toPushCount <span class="token operator">=</span> last<span class="token punctuation">.</span>length <span class="token comment">// \u8BB0\u5F55\u4E0B\u4E00\u6B21\u8FD8\u80FD\u88AB\u63A8\u5012\u7684\u4E2A\u6570</span>

  <span class="token doc-comment comment">/**
   * \u5224\u65AD\u662F\u5426\u80FD\u5728\u4E0B\u4E00\u6B21\u88AB\u63A8\u5012
   */</span>
  <span class="token keyword">function</span> <span class="token function">pushable</span><span class="token punctuation">(</span><span class="token parameter">dominoes<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>dominoes<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span> <span class="token comment">// \u5DF2\u7ECF\u88AB\u63A8\u5012\u4E86</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>dominoes<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&#39;R&#39;</span> <span class="token operator">&amp;&amp;</span> dominoes<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string">&#39;L&#39;</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span> <span class="token comment">// R.. R. \u90FD\u53EF\u4EE5</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>dominoes<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&#39;L&#39;</span> <span class="token operator">&amp;&amp;</span> dominoes<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string">&#39;R&#39;</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span> <span class="token comment">// ..L .L \u90FD\u53EF\u4EE5</span>

    <span class="token keyword">return</span> <span class="token boolean">false</span>
  <span class="token punctuation">}</span>
  <span class="token doc-comment comment">/**
   * \u5224\u65AD\u5F53\u524D\u63A8\u5012\u7ED3\u679C
   */</span>
  <span class="token keyword">function</span> <span class="token function">pushRes</span><span class="token punctuation">(</span><span class="token parameter">last<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>last<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span> <span class="token keyword">return</span> last<span class="token punctuation">[</span>i<span class="token punctuation">]</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>last<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&#39;R&#39;</span> <span class="token operator">&amp;&amp;</span> last<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string">&#39;L&#39;</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string">&#39;R&#39;</span> <span class="token comment">// R.. R. \u90FD\u53D8\u6210R \u5176\u4F59\u60C5\u51B5\u90FD\u4E0D\u80FD\u53D8\u6210R</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>last<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&#39;L&#39;</span> <span class="token operator">&amp;&amp;</span> last<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string">&#39;R&#39;</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string">&#39;L&#39;</span> <span class="token comment">// ..L .L \u90FD\u53D8\u6210L \u5176\u4F59\u60C5\u51B5\u90FD\u4E0D\u80FD\u53D8\u6210L</span>

    <span class="token keyword">return</span> last<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">while</span><span class="token punctuation">(</span>toPushCount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> updateToPushCount <span class="token operator">=</span> <span class="token number">0</span> <span class="token comment">// \u8BB0\u5F55\u5728\u672C\u6B21\u4E2D\u6CA1\u6709\u88AB\u63A8\u5012\uFF08\u4F46\u6709\u53EF\u80FD\u4F1A\u88AB\u63A8\u5012\uFF09\u7684\u503C   \u6C38\u8FDC\u4E0D\u4F1A\u88AB\u63A8\u5012\u7684\u60C5\u51B5 .L R. R.L L.R</span>

    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> latest<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      latest<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">pushRes</span><span class="token punctuation">(</span>last<span class="token punctuation">,</span> i<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> latest<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">pushable</span><span class="token punctuation">(</span>latest<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        updateToPushCount<span class="token operator">++</span> <span class="token comment">// \u5728\u4E0B\u4E00\u6B21\u8FD8\u662F\u53EF\u4EE5\u88AB\u63A8\u5012\u7684</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u590D\u7528\u6570\u7EC4\u51CF\u5C11\u7A7A\u95F4\u5F00\u9500</span>
    <span class="token keyword">let</span> temp <span class="token operator">=</span> last
    last <span class="token operator">=</span> latest
    latest <span class="token operator">=</span> temp

    toPushCount <span class="token operator">=</span> updateToPushCount
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> last<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br></div></div><h2 id="\u601D\u8DEF2" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF2" aria-hidden="true">#</a> \u601D\u8DEF2</h2><p>LeetCode\u7684\u5B98\u65B9\u6A21\u62DF</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">pushDominoes</span><span class="token punctuation">(</span><span class="token parameter">dominoes</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  dominoes <span class="token operator">=</span> dominoes<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>

  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> dominoes<span class="token punctuation">.</span>length<span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>dominoes<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string">&#39;.&#39;</span> <span class="token operator">&amp;&amp;</span> dominoes<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      i<span class="token operator">++</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> leftIndex <span class="token operator">=</span> i
    <span class="token keyword">while</span><span class="token punctuation">(</span>dominoes<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      i<span class="token operator">++</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> rightIndex <span class="token operator">=</span> i <span class="token operator">-</span> <span class="token number">1</span>
    <span class="token keyword">let</span> left <span class="token operator">=</span> dominoes<span class="token punctuation">[</span>leftIndex<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token string">&#39;L&#39;</span>
    <span class="token keyword">let</span> right <span class="token operator">=</span> dominoes<span class="token punctuation">[</span>rightIndex<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token string">&#39;R&#39;</span>
    
    <span class="token keyword">if</span><span class="token punctuation">(</span>left <span class="token operator">===</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">while</span><span class="token punctuation">(</span>leftIndex <span class="token operator">&lt;=</span> rightIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        dominoes<span class="token punctuation">[</span>leftIndex<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> left
      <span class="token punctuation">}</span>
      <span class="token comment">// \u987A\u7740</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>left <span class="token operator">===</span> <span class="token string">&#39;R&#39;</span> <span class="token operator">&amp;&amp;</span> right <span class="token operator">===</span> <span class="token string">&#39;L&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">while</span><span class="token punctuation">(</span>leftIndex <span class="token operator">&lt;</span> rightIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        dominoes<span class="token punctuation">[</span>leftIndex<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;R&#39;</span>
        dominoes<span class="token punctuation">[</span>rightIndex<span class="token operator">--</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;L&#39;</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// \u76F8\u5BF9</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u76F8\u53CD doNothing</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>dominoes<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> dominoes<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// pushDominoes2(&#39;.L.R...LR..L..&#39;)</span>
<span class="token function">pushDominoes2</span><span class="token punctuation">(</span><span class="token string">&#39;RR.L&#39;</span><span class="token punctuation">)</span>

<span class="token string">&quot;LL.RR.LLRRLL..&quot;</span>
<span class="token string">&#39;LL.RR.LLRRLL..&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br></div></div>`,6);function f(g,w){const a=p("ExternalLinkIcon");return t(),e(c,null,[n("h1",i,[k,b,n("a",m,[d,o(a)])]),h],64)}var R=r(u,[["render",f]]);export{R as default};
