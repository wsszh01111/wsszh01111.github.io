import{r as p,o as t,c as e,a as n,d as o,F as c,b as s,e as l}from"./app.6a81c09a.js";import{_ as r}from"./plugin-vue_export-helper.21dcd24c.js";const u={},i={id:"_875-\u7231\u5403\u9999\u8549\u7684\u73C2\u73C2-koko-eating-bananas",tabindex:"-1"},k=n("a",{class:"header-anchor",href:"#_875-\u7231\u5403\u9999\u8549\u7684\u73C2\u73C2-koko-eating-bananas","aria-hidden":"true"},"#",-1),b=s(),m={href:"https://leetcode-cn.com/problems/koko-eating-bananas/",target:"_blank",rel:"noopener noreferrer"},d=s("875. \u7231\u5403\u9999\u8549\u7684\u73C2\u73C2(Koko Eating Bananas)"),h=l(`<h2 id="\u601D\u8DEF1" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF1" aria-hidden="true">#</a> \u601D\u8DEF1</h2><p>\u5BF9\u4E8Ek\u7684\u67E5\u627E\u672C\u8D28\u4E0A\u662F\u627E\u4E2A\u6570\u80FD\u5339\u914D\u5230\u6700\u5C0F\u503C\uFF0C\u53EF\u4EE5\u7406\u89E3\u4E3A\u4ECE\u6709\u5E8F\u6570\u7EC4\u4E2D\u627E\u5230\u6700\u5C0F\u7684\u5339\u914Dk\u503C\uFF0C\u6240\u4EE5\u91C7\u7528\u4E8C\u5206\u641C\u7D22\u67E5\u627Ek\u5373\u53EF</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">kokoEatingBananas</span><span class="token punctuation">(</span><span class="token parameter">piles<span class="token punctuation">,</span> h</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> left <span class="token operator">=</span> <span class="token number">1</span>
  <span class="token keyword">let</span> right <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token operator">...</span>piles<span class="token punctuation">)</span>

  <span class="token keyword">let</span> minK <span class="token operator">=</span> right
  <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token keyword">while</span><span class="token punctuation">(</span>left <span class="token operator">&lt;=</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;leftright&#39;</span><span class="token punctuation">,</span> left<span class="token punctuation">,</span> right<span class="token punctuation">)</span>
    <span class="token keyword">const</span> mid <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>left<span class="token operator">+</span>right<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> spendH <span class="token operator">=</span> <span class="token function">match</span><span class="token punctuation">(</span>piles<span class="token punctuation">,</span> mid<span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>spendH<span class="token punctuation">,</span> mid<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>spendH <span class="token operator">&gt;</span> h<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u65F6\u95F4\u4E0D\u591F\u5F97\u5403\u5FEB\u70B9</span>
      left <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      minK <span class="token operator">=</span> mid
      right <span class="token operator">=</span> mid <span class="token operator">-</span> <span class="token number">1</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>i<span class="token operator">++</span> <span class="token operator">&gt;</span> <span class="token number">15</span><span class="token punctuation">)</span> <span class="token keyword">break</span> 
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> minK
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">match</span><span class="token punctuation">(</span><span class="token parameter">piles<span class="token punctuation">,</span> k</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> h <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> pile <span class="token keyword">of</span> piles<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    h <span class="token operator">+=</span> Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>pile <span class="token operator">/</span> k<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> h
<span class="token punctuation">}</span>

<span class="token function">kokoEatingBananas</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div>`,3);function f(_,g){const a=p("ExternalLinkIcon");return t(),e(c,null,[n("h1",i,[k,b,n("a",m,[d,o(a)])]),h],64)}var x=r(u,[["render",f]]);export{x as default};
