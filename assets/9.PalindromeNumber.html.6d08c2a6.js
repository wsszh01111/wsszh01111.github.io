import{r as e,o as p,c as t,a as n,d as o,F as c,b as s,e as l}from"./app.6a81c09a.js";import{_ as r}from"./plugin-vue_export-helper.21dcd24c.js";const i={},u={id:"_9-\u56DE\u6587\u6570",tabindex:"-1"},k=n("a",{class:"header-anchor",href:"#_9-\u56DE\u6587\u6570","aria-hidden":"true"},"#",-1),d=s(),b={href:"https://leetcode-cn.com/problems/palindrome-number/",target:"_blank",rel:"noopener noreferrer"},m=s("9. \u56DE\u6587\u6570"),h=l(`<h2 id="\u601D\u8DEF1" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF1" aria-hidden="true">#</a> \u601D\u8DEF1</h2><p>\u5C06\u6570\u5B57\u8F6C\u6210\u5B57\u7B26\u4E32\uFF0C\u6309\u7167\u5224\u65AD\u56DE\u6587\u5B57\u7B26\u4E32\u7684\u65B9\u5F0F\u6C42\u89E3\uFF0C\u901A\u5E38\u8FD9\u79CD\u601D\u8DEF\u90FD\u662F\u88AB\u7981\u6B62\u7684</p><h2 id="\u601D\u8DEF2-1" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF2-1" aria-hidden="true">#</a> \u601D\u8DEF2.1</h2><p>\u6570\u5B57\u53D6\u53CD\u540E\u67E5\u770B\u662F\u5426\u76F8\u540C\uFF0C\u76F4\u63A5\u53D6\u53CD</p><h2 id="\u601D\u8DEF2-2" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF2-2" aria-hidden="true">#</a> \u601D\u8DEF2.2</h2><p>\u6570\u5B57\u53D6\u53CD\u540E\u67E5\u770B\u662F\u5426\u76F8\u540C\uFF0C\u53D6\u53CD\u4E00\u534A\u5373\u53EF</p><h2 id="\u601D\u8DEF3" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF3" aria-hidden="true">#</a> \u601D\u8DEF3</h2><p>\u7C7B\u4F3C\u53CC\u6307\u9488 \u4ECE\u6570\u7684\u4E24\u7AEF\u5224\u65AD\u662F\u5426\u76F8\u7B49 \u9700\u8981\u5148\u627E\u5230\u6570\u7684\u91CF\u7EA7</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">palindromeNumber</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

  <span class="token keyword">let</span> len <span class="token operator">=</span> <span class="token number">1</span>
  <span class="token keyword">let</span> divide <span class="token operator">=</span> <span class="token number">1</span>
  <span class="token keyword">while</span><span class="token punctuation">(</span>n<span class="token operator">/</span>divide <span class="token operator">&gt;=</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    divide <span class="token operator">*=</span> <span class="token number">10</span>
    len<span class="token operator">++</span>
  <span class="token punctuation">}</span>
  
  <span class="token keyword">let</span> leftIndex <span class="token operator">=</span> len
  <span class="token keyword">let</span> rightIndex <span class="token operator">=</span> <span class="token number">1</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u5FAA\u73AF\u521D\u59CB &#39;</span><span class="token punctuation">,</span> len<span class="token punctuation">,</span><span class="token punctuation">)</span>
  <span class="token keyword">while</span><span class="token punctuation">(</span>leftIndex <span class="token operator">&gt;</span> rightIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u5FAA\u73AF &#39;</span><span class="token punctuation">,</span> leftIndex<span class="token punctuation">,</span> rightIndex<span class="token punctuation">)</span>

    <span class="token keyword">let</span> leftDivide <span class="token operator">=</span> <span class="token number">10</span> <span class="token operator">**</span> <span class="token punctuation">(</span>leftIndex <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// leftPos = Math.floor(10101 / 10 ** (5 - 1))</span>
    <span class="token keyword">let</span> rightDivide <span class="token operator">=</span> <span class="token number">10</span> <span class="token operator">**</span> rightIndex
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;divide &#39;</span><span class="token punctuation">,</span> leftDivide<span class="token punctuation">,</span> rightDivide<span class="token punctuation">)</span>

    <span class="token keyword">const</span> leftPos <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>n <span class="token operator">/</span> leftDivide<span class="token punctuation">)</span>
    <span class="token keyword">const</span> rightPos <span class="token operator">=</span> n <span class="token operator">%</span> rightDivide
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;pos &#39;</span><span class="token punctuation">,</span> leftDivide<span class="token punctuation">,</span> rightDivide<span class="token punctuation">)</span>
    
    <span class="token keyword">if</span> <span class="token punctuation">(</span>leftPos <span class="token operator">!==</span> rightPos<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span>
    leftIndex<span class="token operator">--</span>
    rightIndex<span class="token operator">++</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u5230\u8FD9\u91CC\u6709\u4E09\u79CD\u60C5\u51B5 n\u672C\u8EAB\u5C31\u662F\u4E2A\u4F4D\u6570 n\u672C\u8EAB\u662F\u5947\u6570\u4E24\u8FB9\u524A\u51CF\u540E\u4EC5\u52691\u4F4D n\u672C\u8EAB\u662F\u5076\u6570\u4E24\u8FB9\u524A\u51CF\u540E\u53D80\u4F4D \u4F46\u4E0D\u7BA1\u54EA\u79CD\u60C5\u51B5 \u90FD\u8BF4\u660E\u662F\u56DE\u6587 \u4E0D\u662F\u56DE\u6587\u7684\u8BDD\u5728while\u4E2D\u5C31return\u4E86</span>
  <span class="token keyword">return</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div>`,9);function f(_,g){const a=e("ExternalLinkIcon");return p(),t(c,null,[n("h1",u,[k,d,n("a",b,[m,o(a)])]),h],64)}var w=r(i,[["render",f]]);export{w as default};
