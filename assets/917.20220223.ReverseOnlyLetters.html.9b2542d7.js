import{r as p,o as e,c as t,a as n,d as o,F as c,b as s,e as l}from"./app.6a81c09a.js";import{_ as r}from"./plugin-vue_export-helper.21dcd24c.js";const u={},i={id:"_917-\u4EC5\u4EC5\u53CD\u8F6C\u5B57\u6BCD",tabindex:"-1"},k=n("a",{class:"header-anchor",href:"#_917-\u4EC5\u4EC5\u53CD\u8F6C\u5B57\u6BCD","aria-hidden":"true"},"#",-1),b=s(),m={href:"https://leetcode-cn.com/problems/reverse-only-letters/",target:"_blank",rel:"noopener noreferrer"},d=s("917. \u4EC5\u4EC5\u53CD\u8F6C\u5B57\u6BCD"),h=l(`<h2 id="\u601D\u8DEF1" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF1" aria-hidden="true">#</a> \u601D\u8DEF1</h2><p>\u53CC\u6307\u9488</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">reverseOnlyLetters</span><span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> s
  <span class="token keyword">const</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[A-Za-z]</span><span class="token regex-delimiter">/</span></span>

  <span class="token keyword">let</span> left <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token keyword">let</span> right <span class="token operator">=</span> s<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span>
  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
  <span class="token comment">// \u5B57\u7B26\u4E32\u4E3B\u8981\u662F\u8981\u8003\u8651\u5947\u5076 \u56E0\u4E3A\u9898\u610F\u662F\u5BF9\u8C03 \u56E0\u6B64\u5947\u6570\u65F6\u4E0D\u9700\u8981\u8003\u8651\u76F8\u7B49\u7684\u60C5\u51B5 \u5076\u6570\u76F8\u7B49\u5C31\u4E0D\u7B26\u5408\u5BF9\u8C03\u9898\u610F\u4E86 \u56E0\u6B64\u8FB9\u754C\u5224\u65AD\u4EC5\u9700&lt;\u5373\u53EF</span>
  <span class="token comment">// \u4F46\u5947\u6570\u7684\u65F6\u5019\u4F1A\u6F0F\u6389\u4E2D\u95F4\u4F4D \u56E0\u6B64\u8FD8\u662F\u52A0\u4E0A</span>
  <span class="token keyword">while</span><span class="token punctuation">(</span>left <span class="token operator">&lt;=</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      res<span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">=</span> s<span class="token punctuation">[</span>left<span class="token punctuation">]</span>
      left<span class="token operator">++</span>
      <span class="token keyword">continue</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      res<span class="token punctuation">[</span>right<span class="token punctuation">]</span> <span class="token operator">=</span> s<span class="token punctuation">[</span>right<span class="token punctuation">]</span>
      right<span class="token operator">--</span>
      <span class="token keyword">continue</span>
    <span class="token punctuation">}</span>
    res<span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">=</span> s<span class="token punctuation">[</span>right<span class="token punctuation">]</span>
    res<span class="token punctuation">[</span>right<span class="token punctuation">]</span> <span class="token operator">=</span> s<span class="token punctuation">[</span>left<span class="token punctuation">]</span>
    left<span class="token operator">++</span>
    right<span class="token operator">--</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div>`,3);function _(g,f){const a=p("ExternalLinkIcon");return e(),t(c,null,[n("h1",i,[k,b,n("a",m,[d,o(a)])]),h],64)}var x=r(u,[["render",_]]);export{x as default};
