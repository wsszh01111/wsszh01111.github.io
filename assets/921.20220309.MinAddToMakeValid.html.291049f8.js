import{r as p,o as e,c as t,a as n,d as o,F as c,b as s,e as l}from"./app.6a81c09a.js";import{_ as r}from"./plugin-vue_export-helper.21dcd24c.js";const u={},i={id:"_921-\u4F7F\u62EC\u53F7\u6709\u6548\u7684\u6700\u5C11\u6DFB\u52A0",tabindex:"-1"},k=n("a",{class:"header-anchor",href:"#_921-\u4F7F\u62EC\u53F7\u6709\u6548\u7684\u6700\u5C11\u6DFB\u52A0","aria-hidden":"true"},"#",-1),d=s(),b={href:"https://leetcode-cn.com/problems/minimum-add-to-make-parentheses-valid/",target:"_blank",rel:"noopener noreferrer"},m=s("921. \u4F7F\u62EC\u53F7\u6709\u6548\u7684\u6700\u5C11\u6DFB\u52A0"),h=l(`<h2 id="\u601D\u8DEF1" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF1" aria-hidden="true">#</a> \u601D\u8DEF1</h2><p>\u6839\u636E\u9898\u610F\uFF0C\u9700\u8981\u6700\u5C11\u6DFB\u52A0\u51E0\u4E2A\u62EC\u53F7\u4F7F\u5F97\u5B57\u7B26\u4E32s\u6709\u6548\uFF0C\u4E5F\u5C31\u662F\u8BF4\u9700\u8981\u5224\u65AD\u6709\u51E0\u4E2A\u6B8B\u7F3A\u7684\u62EC\u53F7\uFF0C\u90A3\u5176\u5B9E\u5C06\u7B2C20\u9898\u4E2D\u7684\u601D\u8DEF\u7A0D\u4F5C\u4FEE\u6539\u5373\u53EF\uFF0C\u7B2C20\u9898\u4E2D\u4F7F\u7528\u6808\u914D\u5BF9\u62EC\u53F7\uFF0C\u53D1\u73B0\u65E0\u6CD5\u5339\u914D\u7684\u76F4\u63A5\u8FD4\u56DEfalse\u5373\u53EF\uFF0C\u90A3\u8FD9\u91CC\u5C31\u4E0D\u76F4\u63A5\u8FD4\u56DEfalse\uFF0C\u8FD8\u662F\u7EE7\u7EED\u6267\u884C\uFF0C\u65E0\u6CD5\u5339\u914D\u7684\u62EC\u53F7\u5C31\u90FD\u7559\u5728\u4E86\u6808\u4E2D\uFF0C\u6700\u540E\u6808\u7684\u957F\u5EA6\u5C31\u662F\u4E86</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">minAddToMakeValid</span><span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> stack <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
   
  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> s<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&#39;(&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>stack<span class="token punctuation">.</span><span class="token function">at</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;(&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> stack<span class="token punctuation">.</span>length
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h2 id="\u601D\u8DEF2" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF2" aria-hidden="true">#</a> \u601D\u8DEF2</h2><p><s>\u601D\u8DEF1\u4E2D\u7531\u4E8E\u4F7F\u7528\u4E86\u6808\uFF0C\u7A7A\u95F4\u590D\u6742\u5EA6\u6709O(N)\uFF0C\u7531\u4E8E\u9898\u76EE\u4E2D\u53EA\u6709\u5355\u4E2A\u7C7B\u578B\u7684\u62EC\u53F7\uFF0C\u56E0\u6B64\u53EF\u4EE5\u76F4\u63A5\u4F7F\u7528\u53D8\u91CF\u8BB0\u5F55\u672A\u5339\u914D\u7684\u62EC\u53F7\u6570\u91CF\u5373\u53EF\uFF0C\u6216\u8005\u4ECE\u4FE1\u606F\u8BBA\u7684\u89D2\u5EA6\u8BB2\uFF0C\u5728\u6B64\u9898\u4E2D\u6211\u4EEC\u9700\u8981\u7684\u4FE1\u606F\u91CF\u4EC5\u4EC5\u662F\u6808\u7684\u957F\u5EA6\uFF0C\u800C\u4E0D\u662F\u6808\u4E2D\u7684\u5185\u5BB9\uFF0C\u56E0\u6B64\u53EF\u4EE5\u505A\u6B64\u66FF\u6362\uFF0C\u56E0\u6B64\u53EA\u6709O(1)\u7684\u7A7A\u95F4\u590D\u6742\u5EA6</s></p><p>\u8FD8\u662F\u4E0D\u592A\u5BF9 \u4F1A\u6709\u7C7B\u4F3C&quot;((())&quot;\u7684\u60C5\u51B5 \u5E94\u8BE5\u662F\u8BB0\u5F55\u9700\u8981\u53F3\u62EC\u53F7\u7684\u6570\u91CFrightNeed \u78B0\u5230\u4E00\u4E2A\u51CF\u4E00\u4E2A \u5982\u679C\u53F3\u62EC\u53F7\u592A\u591A\u4E86 \u5219rightNeed\u53D8\u6210\u8D1F\u6570\u7684\u65F6\u5019 \u8BF4\u660E\u9700\u8981\u52A0\u5165\u5DE6\u62EC\u53F7 \u9700\u8981\u5DE6\u62EC\u53F7\u7684\u6570\u91CFleftNeed++</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">minAddToMakeValid</span><span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> leftNeed <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token keyword">let</span> rightNeed <span class="token operator">=</span> <span class="token number">0</span>

  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> s<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&#39;(&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      rightNeed<span class="token operator">++</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// &quot;)&quot;</span>
      rightNeed<span class="token operator">--</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>rightNeed <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// right\u592A\u591A\u4E86</span>
        leftNeed<span class="token operator">++</span>
        rightNeed <span class="token operator">=</span> <span class="token number">0</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> leftNeed<span class="token operator">+</span>rightNeed
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>/** *</p><ul><li>\u601D\u8DEF</li><li><ol><li></li></ol></li><li><ol start="2"><li></li></ol></li><li><ol start="3"><li>2 */</li></ol></li></ul><p>console.log(minAddToMakeValid2(&quot;())&quot;)) console.log(minAddToMakeValid2(&#39;((())&#39;))</p>`,10);function f(_,g){const a=p("ExternalLinkIcon");return e(),t(c,null,[n("h1",i,[k,d,n("a",b,[m,o(a)])]),h],64)}var N=r(u,[["render",f]]);export{N as default};
