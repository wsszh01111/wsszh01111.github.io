import{r as p,o as t,c as e,a as n,d as o,F as c,b as s,e as l}from"./app.6a81c09a.js";import{_ as u}from"./plugin-vue_export-helper.21dcd24c.js";const r={},i={id:"_969-\u714E\u997C\u6392\u5E8F",tabindex:"-1"},k=n("a",{class:"header-anchor",href:"#_969-\u714E\u997C\u6392\u5E8F","aria-hidden":"true"},"#",-1),b=s(),m={href:"https://leetcode-cn.com/problems/pancake-sorting/",target:"_blank",rel:"noopener noreferrer"},d=s("969. \u714E\u997C\u6392\u5E8F"),f=l(`<h2 id="\u601D\u8DEF1" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF1" aria-hidden="true">#</a> \u601D\u8DEF1</h2><p>\u771F\u7684\u6267\u884C\u4E00\u4E0B\u6392\u5E8F\uFF0C\u5E76\u9012\u5F52\u6267\u884C\u5047\u8BBE\u524Dn-1\u4E2A\u90FD\u4EE5\u6210\u529F\u6392\u5E8F\uFF0C\u51CE\uFF0C\u65F6\u95F4\u548C\u7A7A\u95F4\u90FD\u53EA\u8D85\u8FC7\u4E865%\uFF0C\u4E0D\u662F\u4E2A\u597D\u65B9\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">pancakeSort1</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">function</span> <span class="token function">recursion</span><span class="token punctuation">(</span><span class="token parameter">array<span class="token punctuation">,</span> targetIndex</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>targetIndex <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

    <span class="token keyword">const</span> lastRes <span class="token operator">=</span> <span class="token function">recursion</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> targetIndex <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;lastBeforeRes &#39;</span><span class="token punctuation">,</span> targetIndex<span class="token punctuation">,</span> lastRes<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> array<span class="token punctuation">[</span>targetIndex<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u6700\u5C0F&#39;</span><span class="token punctuation">)</span>
      <span class="token comment">// \u6700\u5C0F</span>
      <span class="token function">sort</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> targetIndex <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
      <span class="token function">sort</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> targetIndex<span class="token punctuation">)</span>
      lastRes<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>targetIndex<span class="token punctuation">)</span>
      lastRes<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>targetIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">[</span>targetIndex <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> array<span class="token punctuation">[</span>targetIndex<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u5728\u4E2D\u95F4&#39;</span><span class="token punctuation">)</span>

      <span class="token keyword">const</span> splitIndex <span class="token operator">=</span> array<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token parameter">a</span> <span class="token operator">=&gt;</span> a <span class="token operator">&gt;</span> array<span class="token punctuation">[</span>targetIndex<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span>
      <span class="token function">sort</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> splitIndex<span class="token punctuation">)</span>
      <span class="token function">sort</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> targetIndex <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
      <span class="token function">sort</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> targetIndex<span class="token punctuation">)</span>
      <span class="token function">sort</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> splitIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
      lastRes<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>splitIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
      lastRes<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>targetIndex<span class="token punctuation">)</span>
      lastRes<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>targetIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
      lastRes<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>splitIndex <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> lastRes
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token function">recursion</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">pancakeSort</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><h2 id="\u601D\u8DEF2" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF2" aria-hidden="true">#</a> \u601D\u8DEF2</h2><p>LeetCode\u5B98\u65B9\u89E3\u6CD5 \u7C7B\u9009\u62E9\u6392\u5E8F \u6BCF\u6B21\u5C06\u6700\u5927\u503C\u901A\u8FC7\u4E24\u6B21\u7FFB\u8F6C\u6392\u5230\u6700\u540E \u9700\u8981O(n**2)\u7684\u65F6\u95F4\u590D\u6742\u5EA6 https://leetcode-cn.com/problems/pancake-sorting/solution/jian-bing-pai-xu-by-leetcode-solution-rzzu/</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">pancakeSort</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> maxIndex <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> m <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> m <span class="token operator">&lt;=</span> i<span class="token punctuation">;</span> m<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>m<span class="token punctuation">]</span> <span class="token operator">&gt;</span> arr<span class="token punctuation">[</span>maxIndex<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        maxIndex <span class="token operator">=</span> m
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>maxIndex <span class="token operator">===</span> i<span class="token punctuation">)</span> <span class="token keyword">continue</span> <span class="token comment">// \u6700\u672B\u4F4D\u5DF2\u7ECF\u662F\u6700\u5927\u503C</span>

    <span class="token function">pancakeReverse</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> maxIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">pancakeReverse</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ret<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>maxIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ret<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">pancakeReverse</span><span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> kIndex</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token keyword">let</span> j <span class="token operator">=</span> kIndex
  <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> temp <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
    arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span>
    arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> temp
    i<span class="token operator">++</span>
    j<span class="token operator">--</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> arr
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div>`,6);function x(g,y){const a=p("ExternalLinkIcon");return t(),e(c,null,[n("h1",i,[k,b,n("a",m,[d,o(a)])]),f],64)}var _=u(r,[["render",x]]);export{_ as default};
