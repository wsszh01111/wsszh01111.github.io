import{e as n}from"./app.6a81c09a.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1 id="reactive-in-vue2" tabindex="-1"><a class="header-anchor" href="#reactive-in-vue2" aria-hidden="true">#</a> Reactive in vue2</h1><p>\u804A\u804AVue2\u7684\u54CD\u5E94\u5F0F</p><h2 id="\u4EC0\u4E48\u662F\u54CD\u5E94\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u4EC0\u4E48\u662F\u54CD\u5E94\u5F0F" aria-hidden="true">#</a> \u4EC0\u4E48\u662F\u54CD\u5E94\u5F0F</h2><p>\u6570\u636E\u54CD\u5E94\u5F0F\u662FVue\u7684\u4E00\u5927\u7279\u70B9\uFF0C\u751A\u81F3\u53EF\u4EE5\u8BF4\u662F\u5176\u6838\u5FC3\u3002\u901A\u8FC7\u521D\u59CB\u5316\u65F6\u5B9A\u4E49\u54CD\u5E94\u5F0F\u6570\u636E\uFF0CVue\u4F1A\u81EA\u52A8\u76D1\u542C\u54CD\u5E94\u5F0F\u6570\u636E\u7684\u53D8\u52A8\uFF0C\u8FDB\u800C\u81EA\u52A8\u89E6\u53D1\u89C6\u56FE\u7684\u66F4\u65B0\u3002\u5373\uFF0C\u9875\u9762\u81EA\u52A8\u54CD\u5E94\u6570\u636E\u53D8\u5316\u8FDB\u884C\u66F4\u65B0\u3002</p><h2 id="\u54CD\u5E94\u5F0F\u7684\u610F\u4E49" tabindex="-1"><a class="header-anchor" href="#\u54CD\u5E94\u5F0F\u7684\u610F\u4E49" aria-hidden="true">#</a> \u54CD\u5E94\u5F0F\u7684\u610F\u4E49</h2><p>\u54CD\u5E94\u5F0F\u6700\u5927\u7684\u610F\u4E49\uFF0C\u6216\u8005\u53EF\u4EE5\u8BF4\u662FVue\u6700\u5927\u7684\u610F\u4E49\uFF0C\u5C31\u662F\u5C4F\u853D\u4E86\u64CD\u4F5CDOM\u66F4\u65B0\u9875\u9762\u7684\u5177\u4F53\u7EC6\u8282\uFF0C\u5E2E\u52A9\u5F00\u53D1\u8005\u805A\u7126\u5728\u4E1A\u52A1\u903B\u8F91\u5B9E\u73B0\u4E0A</p><p>\u5728Vue\u548CReact\u51FA\u73B0\u4E4B\u524D\uFF0C\u5E38\u89C4\u7684\u524D\u7AEF\u5F00\u53D1\u65B9\u5F0F\u90FD\u662F\u7F16\u5199\u4E1A\u52A1\u903B\u8F91\u6216\u8BFB\u53D6\u540E\u7AEF\u63A5\u53E3\u83B7\u5F97\u6570\u636E\uFF0C\u901A\u8FC7JQuery\u6216\u6D4F\u89C8\u5668\u539F\u751F\u63D0\u4F9B\u7684DOM\u63A5\u53E3\u5C06\u6570\u636E\u6E32\u67D3\u5230\u9875\u9762\uFF1B\u5728\u9700\u8981\u76D1\u542C\u9875\u9762\u53D8\u52A8\u65F6\uFF0C\u9700\u8981\u5728\u5BF9\u5E94\u5143\u7D20\u4E0A\u6CE8\u518C\u4E8B\u4EF6\u76D1\u542C\u5668\u3002\u968F\u7740\u4E1A\u52A1\u4F53\u91CF\u7684\u589E\u52A0\uFF0C\u8FD9\u79CD\u64CD\u4F5CDOM\u7684\u65B9\u5F0F\u4F1A\u5C06\u4E1A\u52A1\u903B\u8F91\u548C\u9875\u9762\u6E32\u67D3\u6108\u53D1\u7684\u8026\u5408\uFF0C\u9020\u6210\u903B\u8F91\u6DF7\u4E71\u96BE\u4EE5\u7EF4\u62A4</p><p>Vue\u7684\u6570\u636E\u54CD\u5E94\u5F0F\u4E3A\u5F00\u53D1\u8005\u63D0\u4F9B\u4E86\u4E00\u79CD\u65B0\u7684\u5F00\u53D1\u65B9\u5F0F\u3002\u5BF9\u4E8E\u5F00\u53D1\u8005\u800C\u8A00\uFF0C\u4E0D\u518D\u9700\u8981\u76F4\u63A5\u64CD\u4F5CDOM\u5BF9\u9875\u9762\u8FDB\u884C\u5904\u7406\uFF0C\u53EA\u9700\u8981\u805A\u7126\u4E8E\u4E1A\u52A1\u903B\u8F91\u672C\u8EAB\u7684\u5B9E\u73B0\uFF0C\u5BF9\u6570\u636E\u8FDB\u884C\u66F4\u65B0\uFF0C\u6570\u636E\u66F4\u65B0\u540E\u7531\u6846\u67B6\u8D1F\u8D23\u9875\u9762\u7684\u6E32\u67D3\u3002\u4F7F\u5F97\u6574\u4F53\u4EE3\u7801\u5C06\u66F4\u52A0\u6E05\u6670\u3001\u6613\u4E8E\u7EF4\u62A4\u3002\u7279\u522B\u662F\u9762\u5BF9\u5927\u578B\u9879\u76EE\u6216\u6709\u5927\u91CF\u7684UI\u4EA4\u4E92\u65F6\uFF0C\u4E1A\u52A1\u903B\u8F91\u548C\u9875\u9762\u6E32\u67D3\u7684\u5206\u79BB\u53EF\u4EE5\u5728\u4E00\u5B9A\u7A0B\u5EA6\u4E0A\u4FDD\u8BC1\u4EE3\u7801\u7684\u590D\u6742\u5EA6\u4E0D\u4F1A\u968F\u7740\u4EE3\u7801\u91CF\u7684\u589E\u52A0\u800C\u589E\u52A0\u3002</p><h2 id="\u54CD\u5E94\u5F0F\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#\u54CD\u5E94\u5F0F\u539F\u7406" aria-hidden="true">#</a> \u54CD\u5E94\u5F0F\u539F\u7406</h2><p>Vue\u7684\u6570\u636E\u54CD\u5E94\u5F0F\uFF0C\u5176\u672C\u8D28\u4E0A\u662F\u4E00\u79CD\u89C2\u5BDF\u8005\u6A21\u5F0F\u7684\u5B9E\u8DF5\u3002\u6570\u636E\u5C5E\u6027\u662F\u88AB\u89C2\u5BDF\u8005\uFF08Observable\uFF09\uFF0C\u89C6\u56FE\u662F\u89C2\u5BDF\u8005\uFF08Observer\uFF09\uFF0C\u5176\u95F4\u5177\u6709\u4E00\u5BF9\u591A\u7684\u4F9D\u8D56\u5173\u7CFB\u3002\u89C6\u56FE\u5728\u521D\u59CB\u5316\u6E32\u67D3\u6216\u66F4\u65B0\u6E32\u67D3\u7684\u8FC7\u7A0B\u4E2D\u6CE8\u518C\u5176\u4F9D\u8D56\u7684\u6570\u636E\u5C5E\u6027\uFF0C\u6570\u636E\u5C5E\u6027\u5728\u53D8\u52A8\u65F6\u901A\u77E5\u8DDF\u5B83\u5177\u6709\u4F9D\u8D56\u5173\u7CFB\u7684\u89C6\u56FE\u8FDB\u884C\u66F4\u65B0\u3002</p><p><img src="https://cn.vuejs.org/images/data.png" alt="\u54CD\u5E94\u5F0F\u539F\u7406"></p><p>\u5176\u57FA\u672C\u601D\u8DEF\u5982\u4E0A\u56FE\u3002\u6BCF\u4E2A\u7EC4\u4EF6\u5747\u6709\u4E00\u4E2A\u5BF9\u5E94\u7684Watcher\u5B9E\u4F8B\u3002\u7EC4\u4EF6\u521D\u59CB\u5316\u65F6\uFF0CVue\u901A\u8FC7<code>Object.defineProperty</code>\u4EE3\u7406\u6570\u636E\u5BF9\u8C61\u7684\u6BCF\u4E2A\u5C5E\u6027\uFF0C\u62E6\u622A\u5C5E\u6027\u7684\u8BFB\u53D6\u548C\u5199\u5165\u64CD\u4F5C\uFF0C\u4F7F\u5F97\u6BCF\u4E2A\u6570\u636E\u5C5E\u6027\u83B7\u5F97\u8BFB\u53D6\u51FD\u6570\uFF08getter\uFF09\u548C\u5199\u5165\u51FD\u6570\uFF08setter\uFF09\u3002\u5F88\u5DE7\u5999\u7684\u5229\u7528\u4E86\u89C6\u56FE\u5728\u6E32\u67D3\u65F6\u9700\u8981\u8BFB\u53D6\u5C5E\u6027\u503C\uFF0C\u5728\u7EC4\u4EF6\u6E32\u67D3\u89C6\u56FE\u8BFB\u53D6\u67D0\u4E2A\u5C5E\u6027\u65F6\uFF08Touch\uFF09\uFF0C\u5728\u8BFB\u53D6\u51FD\u6570\uFF08getter\uFF09\u4E2D\u5EFA\u7ACB\u5F53\u524D\u7EC4\u4EF6\u548C\u8BE5\u6570\u636E\u5BF9\u8C61\u5C5E\u6027\u7684\u4F9D\u8D56\u5173\u7CFB\uFF08Collect as Dependency\uFF09\u3002\u5BF9\u6570\u636E\u5C5E\u6027\u7684\u66F4\u65B0\u672C\u8D28\u4E0A\u662F\u4E00\u79CD\u5199\u5165\u64CD\u4F5C\uFF0C\u5728\u5199\u5165\u65F6\u901A\u77E5\uFF08Notify\uFF09\u8DDF\u5F53\u524D\u5C5E\u6027\u5177\u6709\u4F9D\u8D56\u5173\u7CFB\u7684\u7EC4\u4EF6\u66F4\u65B0\u89C6\u56FE\uFF08re-render\uFF09\u3002</p><blockquote><p>Object.defineProperty\u662F\u65E0\u6CD5\u88ABshim\u7684\uFF08\u5373\u65E0\u6CD5\u66FF\u4EE3\u5B9E\u73B0\uFF09\uFF0C\u8FD9\u4E5F\u662FVue\u4E0D\u652F\u6301IE8\u7684\u539F\u56E0\u3002</p></blockquote><p>\u603B\u7684\u6765\u8BF4\uFF0CVue\u7684\u6570\u636E\u54CD\u5E94\u7CFB\u7EDF\u5728\u5177\u4F53\u5B9E\u73B0\u4E0A\uFF0C\u53EF\u4EE5\u5206\u6210<strong>\u521D\u59CB\u5316\u54CD\u5E94\u5F0F\u6570\u636E</strong>\u3001<strong>\u4F9D\u8D56\u6536\u96C6</strong>\u3001<strong>\u901A\u77E5\u66F4\u65B0</strong>\u4E09\u4E2A\u90E8\u5206</p><h3 id="\u5C06\u666E\u901A\u6570\u636E\u53D8\u6210\u54CD\u5E94\u5F0F\u6570\u636E" tabindex="-1"><a class="header-anchor" href="#\u5C06\u666E\u901A\u6570\u636E\u53D8\u6210\u54CD\u5E94\u5F0F\u6570\u636E" aria-hidden="true">#</a> \u5C06\u666E\u901A\u6570\u636E\u53D8\u6210\u54CD\u5E94\u5F0F\u6570\u636E</h3><p>JS\u4E2D\u7684\u5C5E\u6027\u53EF\u4EE5\u6839\u636E\u5C5E\u6027\u7279\u6027\u5206\u4E3A\u503C\u5C5E\u6027\u548C\u8BBF\u95EE\u5668\u5C5E\u6027\u4E24\u79CD\uFF08\u6709value\u548Cwritable\u7684\u5C31\u662F\u503C\u5C5E\u6027\uFF0C\u6709getter\u548Csetter\u7684\u5C31\u662F\u8BBF\u95EE\u5668\u5C5E\u6027\uFF09\u3002<code>Object.defineProperty</code>\u529F\u80FD\u4E4B\u4E00\u5C31\u662F\u53EF\u4EE5\u8BBE\u7F6E\u8FD9\u4E24\u7C7B\u5C5E\u6027\uFF0C\u800CVue\u5C31\u662F\u5728\u521D\u59CB\u5316\u65F6\u5019\uFF0C\u5229\u7528<code>Object.defineProperty</code>\u5C06\u6240\u6709\u5C5E\u6027\u8F6C\u5316\u4E3A\u8BBF\u95EE\u5668\u5C5E\u6027\u4EE5\u5B9E\u73B0\u5BF9\u6570\u636E\u5C5E\u6027\u8BFB\u53D6/\u5199\u5165\u64CD\u4F5C\u7684\u62E6\u622A\uFF0C\u5E76\u5728\u8BFB\u53D6\u51FD\u6570\uFF08getter\uFF09\u548C\u5199\u5165\u51FD\u6570\uFF08setter\uFF09\u4E2D\u5B9E\u73B0\u54CD\u5E94\u5F0F\u903B\u8F91</p><p>\u4EE5\u4E0B\u7ED3\u5408\u4EE3\u7801\u8FDB\u884C\u6DF1\u5165\u7684\u5206\u6790</p><h4 id="initdata" tabindex="-1"><a class="header-anchor" href="#initdata" aria-hidden="true">#</a> initData</h4><p><code>initData</code>\u662F\u7EC4\u4EF6\u6570\u636E\u521D\u59CB\u5316\u5165\u53E3\uFF0C\u5C06\u6570\u636E\u5BF9\u8C61\u6302\u8F7D\u5728Vue\u5B9E\u4F8B\u7684<code>_data</code>\u5C5E\u6027\u4E0A\uFF0C\u4E4B\u540E\u904D\u5386\u5BF9\u8C61\u7684\u6240\u6709\u5C5E\u6027\uFF0C\u5BF9\u5C5E\u6027\u540D\u662F\u5426\u91CD\u590D\u8FDB\u884C\u5224\u65AD\uFF08\u91CD\u590D\u4E86\u5C31\u53EF\u80FD\u9020\u6210\u4E1A\u52A1\u903B\u8F91\u5F02\u5E38\uFF09\uFF1B\u7136\u540E\u8FDB\u5165\u6838\u5FC3\u903B\u8F91<code>observe</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// src/core/instance/state.js</span>

<span class="token comment">// initData\u662F\u7EC4\u4EF6\u6570\u636E\u521D\u59CB\u5316\u5165\u53E3</span>
<span class="token keyword">function</span> <span class="token function">initData</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">vm</span><span class="token operator">:</span> Component</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> data <span class="token operator">=</span> vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>data
  data <span class="token operator">=</span> vm<span class="token punctuation">.</span>_data <span class="token operator">=</span> <span class="token keyword">typeof</span> data <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span> <span class="token operator">?</span> <span class="token function">getData</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> vm<span class="token punctuation">)</span> <span class="token operator">:</span> data <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token comment">// \u83B7\u5F97\u6570\u636E\u5BF9\u8C61data</span>
  <span class="token comment">// Vue\u7EC4\u4EF6\u6700\u7EC8\u83B7\u5F97\u7684data\u6570\u636E\u5E94\u8BE5\u662F\u4E2A\u666E\u901A\u5BF9\u8C61</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isPlainObject</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token function">warn</span><span class="token punctuation">(</span>
      <span class="token string">&#39;data functions should return an object:\\n&#39;</span> <span class="token operator">+</span>
      <span class="token string">&#39;https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function&#39;</span><span class="token punctuation">,</span>
      vm
    <span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// proxy data on instance</span>
  <span class="token keyword">const</span> keys <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
  <span class="token keyword">const</span> props <span class="token operator">=</span> vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>props
  <span class="token keyword">const</span> methods <span class="token operator">=</span> vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>methods
  <span class="token keyword">let</span> i <span class="token operator">=</span> keys<span class="token punctuation">.</span>length
  <span class="token keyword">while</span> <span class="token punctuation">(</span>i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> key <span class="token operator">=</span> keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
    <span class="token comment">// \u5224\u65AD\u5C5E\u6027\u662F\u5426\u548C\u51FD\u6570\u91CD\u540D</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>methods <span class="token operator">&amp;&amp;</span> <span class="token function">hasOwn</span><span class="token punctuation">(</span>methods<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">warn</span><span class="token punctuation">(</span>
          <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Method &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; has already been defined as a data property.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
          vm
        <span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5224\u65AD\u5C5E\u6027\u662F\u5426\u548Cprops\u91CD\u540D</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>props <span class="token operator">&amp;&amp;</span> <span class="token function">hasOwn</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token function">warn</span><span class="token punctuation">(</span>
        <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">The data property &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; is already declared as a prop. </span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
        <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Use prop default value instead.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
        vm
      <span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isReserved</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u5224\u65AD\u5C5E\u6027\u662F\u5426\u548C\u4FDD\u7559\u5B57\u91CD\u540D</span>
      <span class="token function">proxy</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">_data</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> key<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// observe data</span>
  <span class="token function">observe</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token boolean">true</span> <span class="token comment">/* asRootData */</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br></div></div><h4 id="observe" tabindex="-1"><a class="header-anchor" href="#observe" aria-hidden="true">#</a> observe()</h4><p>\u8FDB\u5165\u6838\u5FC3\u903B\u8F91<code>observe</code>\u540E\uFF0C\u9664\u4E86\u4E00\u4E9B\u5FC5\u8981\u7684\u903B\u8F91\u5224\u65AD\u5916\uFF0C\u4E3B\u8981\u5C31\u5E72\u4E86\u4E24\u4EF6\u4E8B\uFF1A</p><ol><li>\u4E3A\u6570\u636E\u5BF9\u8C61\u751F\u6210<code>Observer</code>\u5B9E\u4F8B\u5E76\u5C06\u5176\u6302\u8F7D\u5728\u6570\u636E\u5BF9\u8C61\u7684<code>__ob__</code>\u5C5E\u6027\u4E0A\uFF08\u6302\u8F7D\u8FC7\u7A0B\u662F\u5728Observer\u7C7B\u7684\u6784\u9020\u51FD\u6570\u4E2D\u5B8C\u6210\u7684\uFF09\uFF0C\u5373\u6BCF\u4E00\u4E2A\u54CD\u5E94\u5F0F\u6570\u636E\u5BF9\u8C61\u90FD\u6709\u4E00\u4E2A\u5BF9\u5E94\u7684<code>Observer</code>\u5B9E\u4F8B</li><li>\u5982\u679C\u8BE5\u6570\u636E\u5BF9\u8C61\u662F\u6839\u6570\u636E\u5BF9\u8C61\uFF0C\u5BF9vmCount\u8BA1\u6570\u52A0\u4E00</li></ol><p>\u9700\u8981\u6CE8\u610F\u4E0B\u5B9E\u4F8B\u5316\u524D\u7684\u5224\u65AD\u903B\u8F91\u3002\u5176\u4E2D\u7684<code>(Array.isArray(value) || isPlainObject(value)) </code>\u5224\u65AD\uFF0C\u8BF4\u660E\u53EA\u6709\u6570\u7EC4\u548C\u666E\u901A\u5BF9\u8C61\u53EF\u4EE5\u8F6C\u5316\u4E3A\u54CD\u5E94\u5F0F\u5BF9\u8C61\uFF0C\u4E5F\u5C31\u610F\u5473\u7740<code>Set</code>\u7B49\u6570\u636E\u7ED3\u6784\u65E0\u6CD5\u4F5C\u4E3A\u54CD\u5E94\u5F0F\u6570\u636E\u4F7F\u7528\uFF0C\u4F46\u4ECE\u5B9E\u9645\u9875\u9762\u6E32\u67D3\u4E0A\u6765\u8BF4\uFF0C\u666E\u901A\u5BF9\u8C61\u548C\u6570\u7EC4\u5DF2\u7ECF\u80FD\u591F\u652F\u6301\u7EDD\u5927\u90E8\u5206\u60C5\u51B5\uFF0C\u5C31\u50CFJSON\u53EF\u4EE5\u9002\u5E94\u7EDD\u5927\u591A\u6570\u60C5\u51B5\u4E00\u6837\uFF1B<code>Object.isExtensible</code>\u62E6\u622A\u4E86\u4E0D\u53EF\u6269\u5C55\u7684\u6570\u636E\uFF1B<code>!value._isVue</code>\u62E6\u622A\u4E86Vue\u5B9E\u4F8B\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// src/core/observer/index.js</span>

<span class="token doc-comment comment">/**
 * Attempt to create an observer instance for a value,
 * returns the new observer if successfully observed,
 * or the existing observer if the value already has one.
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">observe</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">value</span><span class="token operator">:</span> any<span class="token punctuation">,</span> <span class="token literal-property property">asRootData</span><span class="token operator">:</span> <span class="token operator">?</span>boolean</span><span class="token punctuation">)</span><span class="token operator">:</span> Observer <span class="token operator">|</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isObject</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">||</span> value <span class="token keyword">instanceof</span> <span class="token class-name">VNode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">let</span> <span class="token literal-property property">ob</span><span class="token operator">:</span> Observer <span class="token operator">|</span> <span class="token keyword">void</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">hasOwn</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> <span class="token string">&#39;__ob__&#39;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> value<span class="token punctuation">.</span>__ob__ <span class="token keyword">instanceof</span> <span class="token class-name">Observer</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    ob <span class="token operator">=</span> value<span class="token punctuation">.</span>__ob__
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>
    shouldObserve <span class="token operator">&amp;&amp;</span>
    <span class="token operator">!</span><span class="token function">isServerRendering</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
    <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">isPlainObject</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
    Object<span class="token punctuation">.</span><span class="token function">isExtensible</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
    <span class="token operator">!</span>value<span class="token punctuation">.</span>_isVue
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    ob <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Observer</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>asRootData <span class="token operator">&amp;&amp;</span> ob<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    ob<span class="token punctuation">.</span>vmCount<span class="token operator">++</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> ob
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><h4 id="observer" tabindex="-1"><a class="header-anchor" href="#observer" aria-hidden="true">#</a> Observer</h4><p>\u6BCF\u4E2A\u54CD\u5E94\u5F0F\u5BF9\u8C61\u90FD\u6709\u4E00\u4E2A\u5BF9\u5E94\u7684<code>Observer</code>\u5B9E\u4F8B\uFF0C\u5176\u4E2D\u4E3B\u8981\u662F\u9488\u5BF9\u6570\u7EC4\u505A\u4E86\u4E00\u4E9B\u7279\u6B8A\u5904\u7406\uFF1A</p><ol><li>\u5982\u679C\u6570\u7EC4\u5BF9\u8C61\u7684\u539F\u578B\u94FE\u53EF\u63A7\uFF08\u5373\u62E5\u6709__proto__\u5C5E\u6027\uFF0C\u901A\u8FC7hasProto\u5224\u65AD\uFF0Cchrome\u7B49\u662F\u652F\u6301\u7684\uFF0CIE\u7B49\u4E0D\u652F\u6301\uFF09\uFF0C\u5219\u76F4\u63A5\u4E2D\u65AD\u539F\u6709\u539F\u578B\u94FE\u6307\u5411\u65B0\u7684\u539F\u578B\u94FE\uFF08\u901A\u8FC7protoAugment\uFF09\uFF1B\u5426\u5219\u5728\u6570\u7EC4\u5BF9\u8C61\u4E0A\u65B0\u589E\u4E00\u7CFB\u5217\u7684\u64CD\u4F5C\u51FD\u6570\u8986\u76D6\u539F\u578B\u94FE\u4E0A\u7684\u539F\u6709\u64CD\u4F5C\u51FD\u6570\u3002\u8FD9\u6837\u505A\uFF0C\u4E3B\u8981\u8FD8\u662F\u56E0\u4E3AJS\u4E2D\u7684\u6570\u7EC4\u65E0\u6CD5\u4F7F\u7528\u5BF9\u8C61\u7684\u65B9\u5F0F\u62E6\u622A\u8BFB\u53D6/\u5199\u5165\u64CD\u4F5C\uFF0C\u56E0\u6B64Vue\u5728\u539F\u751F\u64CD\u4F5C\u51FD\u6570\u7684\u57FA\u7840\u4E0A\u5C01\u88C5\u4E86\u4E00\u5C42\uFF0C\u4FDD\u8BC1\u5728\u4F7F\u7528\u4E00\u7CFB\u5217\u64CD\u4F5C\u51FD\u6570\u66F4\u65B0\u6570\u7EC4\u65F6\u80FD\u89E6\u53D1\u89C6\u56FE\u66F4\u65B0</li><li>\u904D\u5386\u6570\u7EC4\u6BCF\u4E00\u9879\u8FDB\u884C\u54CD\u5E94\u5F0F\u5904\u7406observeArray</li></ol><p>\u5177\u4F53\u6BCF\u4E2A\u5BF9\u8C61\u5C5E\u6027\u7684\u54CD\u5E94\u5F0F\u8F6C\u5316\uFF0C\u5B9E\u9645\u90FD\u662F\u5728<code>walk</code>\u51FD\u6570\u4E2D\u7684<code>defineReactive</code>\u4E2D\u5B8C\u6210\u7684</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// src/core/observer/index.js</span>

<span class="token doc-comment comment">/**
 * Observer class that is attached to each observed
 * object. Once attached, the observer converts the target
 * object&#39;s property keys into getter/setters that
 * collect dependencies and dispatch updates.
 */</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">Observer</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">value</span><span class="token operator">:</span> any<span class="token punctuation">;</span>
  <span class="token literal-property property">dep</span><span class="token operator">:</span> Dep<span class="token punctuation">;</span>
  <span class="token literal-property property">vmCount</span><span class="token operator">:</span> number<span class="token punctuation">;</span> <span class="token comment">// number of vms that have this object as root $data</span>

  <span class="token function">constructor</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">value</span><span class="token operator">:</span> any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value
    <span class="token keyword">this</span><span class="token punctuation">.</span>dep <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dep</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>vmCount <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token function">def</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> <span class="token string">&#39;__ob__&#39;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>hasProto<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">protoAugment</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> arrayMethods<span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">copyAugment</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> arrayMethods<span class="token punctuation">,</span> arrayKeys<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">observeArray</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">walk</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**	
   * Walk through all properties and convert them into
   * getter/setters. This method should only be called when
   * value type is Object.
   */</span>
  <span class="token function">walk</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">obj</span><span class="token operator">:</span> Object</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> keys <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> keys<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">defineReactive</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   * Observe a list of Array items.
   */</span>
  <span class="token function">observeArray</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">items</span><span class="token operator">:</span> Array<span class="token operator">&lt;</span>any<span class="token operator">&gt;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> l <span class="token operator">=</span> items<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> l<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">observe</span><span class="token punctuation">(</span>items<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br></div></div><h4 id="dep" tabindex="-1"><a class="header-anchor" href="#dep" aria-hidden="true">#</a> Dep</h4><p>\u5728\u4E0A\u9762<code>Observer</code>\u6784\u9020\u51FD\u6570\u4E2D\u6CE8\u610F\u5230\u8FD8\u751F\u6210\u4E00\u4E2A<code>Dep</code>\u5B9E\u4F8B\uFF0C\u6BCF\u4E2A<code>Dep</code>\u5B9E\u4F8B\u5B9E\u9645\u5C31\u4EE3\u8868\u4E86\u4E00\u4E2A\u6570\u636E\u5BF9\u89C6\u56FE\u7684\u4E00\u5BF9\u591A\u7684\u4F9D\u8D56\u5173\u7CFB\uFF0C\u5373\u4E00\u4E2A\u6570\u636E\u88AB\u96F6\u4E2A\u4E00\u4E2A\u6216\u591A\u4E2A\u89C6\u56FE\u4F9D\u8D56\uFF1B\u4E0D\u4EC5\u6BCF\u4E2A<code>Observer</code>\u5B9E\u4F8B\u4F1A\u6709\u4E00\u4E2A\u5BF9\u5E94\u7684<code>Dep</code>\u5B9E\u4F8B\uFF0C\u4E0B\u9762\u8FD8\u4F1A\u770B\u5230\u5728<code>defineReactive</code> \u4E2D\u4E5F\u4F1A\u5B9A\u4E49<code>Dep</code>\u5B9E\u4F8B\uFF0C\u8FD9\u4E5F\u5C31\u662F\u8BF4\uFF0C\u6BCF\u4E2A\u6570\u636E\u5BF9\u8C61\uFF08\u4E00\u4E2A\u6570\u636E\u5BF9\u8C61\u5BF9\u5E94\u6709\u4E00\u4E2A<code>Observer</code>\u5B9E\u4F8B\uFF09\u548C\u6570\u636E\u5BF9\u8C61\u7684\u6BCF\u4E2A\u5C5E\u6027\uFF0C\u5747\u4F1A\u6709\u4E00\u4E2A\u5BF9\u5E94\u7684<code>Dep</code>\u5B9E\u4F8B\u7528\u4E8E\u7BA1\u7406\u6570\u636E\u548C\u89C6\u56FE\u7684\u4F9D\u8D56\u5173\u7CFB\u3002</p><p>\u6CE8\u610F<code>Dep</code>\u6784\u9020\u51FD\u6570\u4E2D\u9664\u4E86\u8BBE\u5B9Aid\u5916\uFF0C\u5C31\u662F\u521D\u59CB\u5316\u4E86\u4E00\u4E2A\u7C7B\u578B\u4E3A\u6570\u7EC4\u7684subs\u5C5E\u6027\uFF0C\u4ECE\u89C2\u5BDF\u8005\u6A21\u5F0F\u7684\u89D2\u5EA6\u7406\u89E3\uFF0C\u8FD9\u4E2Asubs\u5C31\u662F\u8BE5\u6570\u636E\u7684\u89C2\u5BDF\u8005\u5217\u8868\uFF0C\u5373\u4F9D\u8D56\u8BE5\u6570\u636E\u7684\u89C6\u56FE\uFF08\u6240\u5BF9\u5E94\u7684Watcher\uFF09\u90FD\u662F\u5B58\u653E\u5728\u8FD9\u91CC\u7684</p><p>\u6B64\u5916\uFF0C<code>Dep</code>\u8FD8\u6709\u4E2A\u9759\u6001\u5C5E\u6027<code>Dep.target</code>\u975E\u5E38\u5173\u952E\uFF0C\u4E0B\u9762\u5728<strong>\u4F9D\u8D56\u6536\u96C6</strong>\u7684\u7AE0\u8282\u518D\u4ED4\u7EC6\u4ECB\u7ECD</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// src/core/observer/dep.js</span>

<span class="token keyword">import</span> type Watcher <span class="token keyword">from</span> <span class="token string">&#39;./watcher&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> remove <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../util/index&#39;</span>
<span class="token keyword">import</span> config <span class="token keyword">from</span> <span class="token string">&#39;../config&#39;</span>

<span class="token keyword">let</span> uid <span class="token operator">=</span> <span class="token number">0</span>

<span class="token doc-comment comment">/**
 * A dep is an observable that can have multiple
 * directives subscribing to it.
 */</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">Dep</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token operator">?</span>Watcher<span class="token punctuation">;</span>
  <span class="token literal-property property">id</span><span class="token operator">:</span> number<span class="token punctuation">;</span>
  <span class="token literal-property property">subs</span><span class="token operator">:</span> Array<span class="token operator">&lt;</span>Watcher<span class="token operator">&gt;</span><span class="token punctuation">;</span>

  <span class="token function">constructor</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> uid<span class="token operator">++</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>subs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment">// \u89C2\u5BDF\u8005\u5217\u8868</span>
  <span class="token punctuation">}</span>

  <span class="token function">addSub</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">sub</span><span class="token operator">:</span> Watcher</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>subs<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>sub<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token function">removeSub</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">sub</span><span class="token operator">:</span> Watcher</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">remove</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>subs<span class="token punctuation">,</span> sub<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token function">depend</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>Dep<span class="token punctuation">.</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      Dep<span class="token punctuation">.</span>target<span class="token punctuation">.</span><span class="token function">addDep</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token function">notify</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// stabilize the subscriber list first</span>
    <span class="token keyword">const</span> subs <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>subs<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>config<span class="token punctuation">.</span>async<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// subs aren&#39;t sorted in scheduler if not running async</span>
      <span class="token comment">// we need to sort them now to make sure they fire in correct</span>
      <span class="token comment">// order</span>
      subs<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>id <span class="token operator">-</span> b<span class="token punctuation">.</span>id<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> l <span class="token operator">=</span> subs<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> l<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      subs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// The current target watcher being evaluated.</span>
<span class="token comment">// This is globally unique because only one watcher</span>
<span class="token comment">// can be evaluated at a time.</span>
Dep<span class="token punctuation">.</span>target <span class="token operator">=</span> <span class="token keyword">null</span>
<span class="token keyword">const</span> targetStack <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">pushTarget</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token operator">?</span>Watcher</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  targetStack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>
  Dep<span class="token punctuation">.</span>target <span class="token operator">=</span> target
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">popTarget</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  targetStack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  Dep<span class="token punctuation">.</span>target <span class="token operator">=</span> targetStack<span class="token punctuation">[</span>targetStack<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br></div></div><h4 id="definereactive" tabindex="-1"><a class="header-anchor" href="#definereactive" aria-hidden="true">#</a> defineReactive()</h4><p>\u5728<code>defineReactive</code>\u4E2D\u5B9E\u9645\u5B8C\u6210\u6BCF\u4E2A\u5BF9\u8C61\u5C5E\u6027\u7684\u54CD\u5E94\u5F0F\u8F6C\u5316</p><p>\u9996\u5148\u6CE8\u610F\u5230\u5728<code>defineReactive</code>\u4E2D\u751F\u6210\u4E86\u4E00\u4E2A<code>Dep</code>\u5B9E\u4F8B\uFF0C\u4EE3\u8868\u4E86\u8BE5\u5BF9\u8C61\u5C5E\u6027\u7684\u4F9D\u8D56\u5173\u7CFB\uFF0C\u5177\u4F53\u5BF9\u4E8E\u4F9D\u8D56\u5173\u7CFB\u7684\u64CD\u4F5C\u5728\u4E0B\u9762\u7684<code>reactiveGetter</code>\u51FD\u6570\u548C<code>reactiveSetter</code>\u51FD\u6570\u4E2D\u5B8C\u6210\u3002\u8FD9\u91CC\u53C8\u4E00\u6B21\u6BD4\u8F83\u5DE7\u5999\u7684\u5229\u7528\u4E86\u95ED\u5305\u6765\u7EF4\u62A4\u6BCF\u4E2A\u5BF9\u8C61\u5C5E\u6027\u7684<code>Dep</code>\u5B9E\u4F8B</p><p>\u7136\u540E\u901A\u8FC7<code>Object.getOwnPropertyDescriptor</code>\u83B7\u53D6\u5C5E\u6027\u63CF\u8FF0\u7B26\uFF0C\u6839\u636E\u5C5E\u6027\u63CF\u8FF0\u7B26\u505A\u4E86\u4E24\u4EF6\u4E8B\uFF1A</p><ol><li>\u5224\u65AD\u8BE5\u5C5E\u6027\u662F\u5426<code>configurable</code>\uFF0C\u8FD9\u4E5F\u5C31\u610F\u5473\u7740\u662F\u5426\u53EF\u4EE5\u5C06\u5176\u8F6C\u6362\u6210\u54CD\u5E94\u5F0F\u5C5E\u6027\uFF08\u662F\u5426\u53EF\u4EE5\u4E3A\u5C5E\u6027\u6DFB\u52A0getter\u548Csetter\u51FD\u6570\uFF09\uFF0C\u5982\u679C\u4E0D\u884C\uFF0C\u5219\u76F4\u63A5\u8FD4\u56DE\u4E86</li><li>\u7531\u4E8E\u5C5E\u6027\u53EF\u80FD\u672C\u6765\u5C31\u662F\u8BBF\u95EE\u5668\u5C5E\u6027\uFF08\u5373\u672C\u6765\u5C31\u62E5\u6709getter\u548Csetter\u51FD\u6570\uFF09\uFF0C\u56E0\u6B64\u5C1D\u8BD5\u8BFB\u53D6\u539F\u6709\u7684getter\u548Csetter\u51FD\u6570\uFF0C\u4FDD\u7559\u539F\u6709\u7684\u6570\u636E\u8BFB\u53D6/\u5199\u5165\u903B\u8F91\uFF08<code>const value = getter ? getter.call(obj) : val</code>\uFF09\uFF0C\u5728\u6B64\u4E4B\u4E0A\u6DFB\u52A0\u54CD\u5E94\u5F0F\u903B\u8F91</li></ol><p>\u4E4B\u540E\u7684<code>observe(val)</code>\uFF0C\u5C31\u662F\u9012\u5F52\u8C03\u7528\u5C5E\u6027\u503C\u7684\u5173\u952E\u3002\u8BBE\u60F3\u4E00\u4E0B\uFF0C\u5982\u679C\u952E\u4E3Akey\u7684\u5C5E\u6027\u503C\u4ECD\u7136\u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u90A3\u4E48\u540C\u6837\u7684\u4E5F\u9700\u8981\u5C06\u8BE5\u5BF9\u8C61\u8F6C\u5316\u6210\u54CD\u5E94\u5F0F\u5BF9\u8C61\uFF0C\u8C03\u7528<code>observe</code>\uFF0C\u518D\u4ECE\u5934\u8D70\u4E00\u904D\u4E4B\u524D\u7684\u6240\u6709\u903B\u8F91\u83B7\u53D6\u5C5E\u6027\u503C\u7684<code>Observer</code>\u5B9E\u4F8B\uFF08\u5982\u679C\u6709\u7684\u8BDD\uFF09</p><p>\u5728\u8BFB\u53D6\uFF08<code>reactiveGetter</code>\uFF09\u8BE5\u5C5E\u6027\u65F6\uFF0C\u8C03\u7528<code>dep.depend()</code>\u8FDB\u884C\u4F9D\u8D56\u6536\u96C6\uFF0C\u5728\u66F4\u65B0\uFF08<code>reactiveSetter</code>\uFF09\u8BE5\u5C5E\u6027\u65F6\uFF0C\u8C03\u7528<code>dep.notify()</code>\u901A\u77E5\u89C6\u56FE\u66F4\u65B0\uFF0C\u5173\u4E8E<strong>\u4F9D\u8D56\u6536\u96C6</strong>\u548C<strong>\u901A\u77E5\u89C6\u56FE\u66F4\u65B0</strong>\u5C06\u5728\u4E0B\u9762\u7684\u7AE0\u8282\u8BE6\u8FF0</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// src/core/observer/index.js</span>

<span class="token doc-comment comment">/**
 * Define a reactive property on an Object.
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">defineReactive</span> <span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">obj</span><span class="token operator">:</span> Object<span class="token punctuation">,</span>
  <span class="token literal-property property">key</span><span class="token operator">:</span> string<span class="token punctuation">,</span>
  <span class="token literal-property property">val</span><span class="token operator">:</span> any<span class="token punctuation">,</span>
  customSetter<span class="token operator">?</span><span class="token operator">:</span> <span class="token operator">?</span>Function<span class="token punctuation">,</span>
  shallow<span class="token operator">?</span><span class="token operator">:</span> boolean</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> dep <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dep</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token keyword">const</span> property <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyDescriptor</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> key<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>property <span class="token operator">&amp;&amp;</span> property<span class="token punctuation">.</span>configurable <span class="token operator">===</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// cater for pre-defined getter/setters</span>
  <span class="token keyword">const</span> getter <span class="token operator">=</span> property <span class="token operator">&amp;&amp;</span> property<span class="token punctuation">.</span>get
  <span class="token keyword">const</span> setter <span class="token operator">=</span> property <span class="token operator">&amp;&amp;</span> property<span class="token punctuation">.</span>set
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">!</span>getter <span class="token operator">||</span> setter<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> arguments<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    val <span class="token operator">=</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">let</span> childOb <span class="token operator">=</span> <span class="token operator">!</span>shallow <span class="token operator">&amp;&amp;</span> <span class="token function">observe</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span>
  Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">enumerable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">configurable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token function">reactiveGetter</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> value <span class="token operator">=</span> getter <span class="token operator">?</span> <span class="token function">getter</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">:</span> val
      <span class="token keyword">if</span> <span class="token punctuation">(</span>Dep<span class="token punctuation">.</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        dep<span class="token punctuation">.</span><span class="token function">depend</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>childOb<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          childOb<span class="token punctuation">.</span>dep<span class="token punctuation">.</span><span class="token function">depend</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">dependArray</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> value
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token function">reactiveSetter</span> <span class="token punctuation">(</span><span class="token parameter">newVal</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> value <span class="token operator">=</span> getter <span class="token operator">?</span> <span class="token function">getter</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">:</span> val
      <span class="token comment">/* eslint-disable no-self-compare */</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>newVal <span class="token operator">===</span> value <span class="token operator">||</span> <span class="token punctuation">(</span>newVal <span class="token operator">!==</span> newVal <span class="token operator">&amp;&amp;</span> value <span class="token operator">!==</span> value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span>
      <span class="token punctuation">}</span>
      <span class="token comment">/* eslint-enable no-self-compare */</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span> <span class="token operator">&amp;&amp;</span> customSetter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">customSetter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// #7981: for accessor properties without setter</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>getter <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>setter<span class="token punctuation">)</span> <span class="token keyword">return</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>setter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">setter</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> newVal<span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        val <span class="token operator">=</span> newVal
      <span class="token punctuation">}</span>
      childOb <span class="token operator">=</span> <span class="token operator">!</span>shallow <span class="token operator">&amp;&amp;</span> <span class="token function">observe</span><span class="token punctuation">(</span>newVal<span class="token punctuation">)</span>
      dep<span class="token punctuation">.</span><span class="token function">notify</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br></div></div><h4 id="\u6570\u636E\u521D\u59CB\u5316\u540E\u751F\u6210\u7684\u6A21\u578B\u5173\u7CFB" tabindex="-1"><a class="header-anchor" href="#\u6570\u636E\u521D\u59CB\u5316\u540E\u751F\u6210\u7684\u6A21\u578B\u5173\u7CFB" aria-hidden="true">#</a> \u6570\u636E\u521D\u59CB\u5316\u540E\u751F\u6210\u7684\u6A21\u578B\u5173\u7CFB</h4><p>\u5C06\u6570\u636E\u8F6C\u6210\u54CD\u5E94\u5F0F\u7684\u9636\u6BB5\u57FA\u672C\u5230\u8FD9\u91CC\u5C31\u7ED3\u675F\u4E86\uFF0C\u603B\u4F53\u800C\u8A00\u5C31\u662F\u4E3A\u6570\u636E\u5BF9\u8C61\u751F\u6210\u548C\u6302\u8F7D<code>Observer</code>\u5B9E\u4F8B\uFF0C\u5C06\u6BCF\u4E2A\u5BF9\u8C61\u5C5E\u6027\u8F6C\u6362\u6210\u54CD\u5E94\u5F0F\uFF0C\u4E3A\u6570\u636E\u5BF9\u8C61\u548C\u5BF9\u8C61\u5C5E\u6027\u751F\u6210<code>Dep</code>\u5B9E\u4F8B\u7528\u4E8E\u540E\u7EED\u7EF4\u62A4\u4F9D\u8D56\u5173\u7CFB\u3002</p><h3 id="\u4F9D\u8D56\u6536\u96C6" tabindex="-1"><a class="header-anchor" href="#\u4F9D\u8D56\u6536\u96C6" aria-hidden="true">#</a> \u4F9D\u8D56\u6536\u96C6</h3><p>\u4F9D\u8D56\u6536\u96C6\u7684\u57FA\u672C\u539F\u7406\uFF0C\u5C31\u662FVue\u4F1A\u8BFB\u53D6\u6570\u636E\u5BF9\u89C6\u56FE\u8FDB\u884C\u6E32\u67D3\uFF0C\u5F53\u6570\u636E\u88AB\u8BFB\u53D6\u65F6\uFF0C\u4F1A\u8C03\u7528\u54CD\u5E94\u5F0F\u6570\u636E\u7684<code>reactiveGetter</code>\u51FD\u6570\uFF0C\u5982\u4E0A\u8FF0\u7684\u89E3\u91CA\uFF0C\u5728<code>reactiveGetter</code>\u5185\u90E8\u4F1A\u8C03\u7528<code>dep.depend()</code>\u8FDB\u884C\u4F9D\u8D56\u6536\u96C6\u3002\u4E0B\u9762\u5C31\u5206\u6210\u51E0\u4E2A\u91CD\u70B9\u8BB2\u89E3\u4E00\u4E0B</p><h4 id="\u7EC4\u4EF6\u6E32\u67D3" tabindex="-1"><a class="header-anchor" href="#\u7EC4\u4EF6\u6E32\u67D3" aria-hidden="true">#</a> \u7EC4\u4EF6\u6E32\u67D3</h4><p>\u5B9E\u9645\u7684\u9875\u9762\u6E32\u67D3\u90FD\u662F\u7EC6\u5206\u6210\u7EC4\u4EF6\u7EA7\u522B\u7684\uFF0C\u6BD5\u7ADF\u65E5\u5E38\u7684\u5F00\u53D1\u90FD\u662F\u4EE5\u7EC4\u4EF6\u8FDB\u884C\u5212\u5206\uFF0CVue\u7684\u89C6\u56FE\u6A21\u677F\u4E5F\u662F\u901A\u8FC7\u7EC4\u4EF6\u8FDB\u884C\u62FC\u63A5\u3002\u7EC4\u4EF6\u6E32\u67D3\u5B9E\u9645\u662F\u5728mount\u751F\u547D\u5468\u671F\u9636\u6BB5\u8FDB\u884C\u7684\uFF0C\u5177\u4F53\u770B\u773C\u4EE3\u7801</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// src/core/instance/lifecycle.js</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">mountComponent</span> <span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">vm</span><span class="token operator">:</span> Component<span class="token punctuation">,</span>
  <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token operator">?</span>Element<span class="token punctuation">,</span>
  hydrating<span class="token operator">?</span><span class="token operator">:</span> boolean</span>
<span class="token punctuation">)</span><span class="token operator">:</span> Component <span class="token punctuation">{</span>
  vm<span class="token punctuation">.</span>$el <span class="token operator">=</span> el
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>render<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>render <span class="token operator">=</span> createEmptyVNode
    <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">/* istanbul ignore if */</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>template <span class="token operator">&amp;&amp;</span> vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>template<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token string">&#39;#&#39;</span><span class="token punctuation">)</span> <span class="token operator">||</span>
        vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>el <span class="token operator">||</span> el<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">warn</span><span class="token punctuation">(</span>
          <span class="token string">&#39;You are using the runtime-only build of Vue where the template &#39;</span> <span class="token operator">+</span>
          <span class="token string">&#39;compiler is not available. Either pre-compile the templates into &#39;</span> <span class="token operator">+</span>
          <span class="token string">&#39;render functions, or use the compiler-included build.&#39;</span><span class="token punctuation">,</span>
          vm
        <span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">warn</span><span class="token punctuation">(</span>
          <span class="token string">&#39;Failed to mount component: template or render function not defined.&#39;</span><span class="token punctuation">,</span>
          vm
        <span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token function">callHook</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> <span class="token string">&#39;beforeMount&#39;</span><span class="token punctuation">)</span>

  <span class="token keyword">let</span> updateComponent
  <span class="token comment">/* istanbul ignore if */</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span> <span class="token operator">&amp;&amp;</span> config<span class="token punctuation">.</span>performance <span class="token operator">&amp;&amp;</span> mark<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">updateComponent</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> name <span class="token operator">=</span> vm<span class="token punctuation">.</span>_name
      <span class="token keyword">const</span> id <span class="token operator">=</span> vm<span class="token punctuation">.</span>_uid
      <span class="token keyword">const</span> startTag <span class="token operator">=</span>   <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">vue-perf-start:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
      <span class="token keyword">const</span> endTag <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">vue-perf-end:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>

      <span class="token function">mark</span><span class="token punctuation">(</span>startTag<span class="token punctuation">)</span>
      <span class="token keyword">const</span> vnode <span class="token operator">=</span> vm<span class="token punctuation">.</span><span class="token function">_render</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token function">mark</span><span class="token punctuation">(</span>endTag<span class="token punctuation">)</span>
      <span class="token function">measure</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">vue </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> render</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> startTag<span class="token punctuation">,</span> endTag<span class="token punctuation">)</span>

      <span class="token function">mark</span><span class="token punctuation">(</span>startTag<span class="token punctuation">)</span>
      vm<span class="token punctuation">.</span><span class="token function">_update</span><span class="token punctuation">(</span>vnode<span class="token punctuation">,</span> hydrating<span class="token punctuation">)</span>
      <span class="token function">mark</span><span class="token punctuation">(</span>endTag<span class="token punctuation">)</span>
      <span class="token function">measure</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">vue </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> patch</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> startTag<span class="token punctuation">,</span> endTag<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">updateComponent</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      vm<span class="token punctuation">.</span><span class="token function">_update</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span><span class="token function">_render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> hydrating<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// we set this to vm._watcher inside the watcher&#39;s constructor</span>
  <span class="token comment">// since the watcher&#39;s initial patch may call $forceUpdate (e.g. inside child</span>
  <span class="token comment">// component&#39;s mounted hook), which relies on vm._watcher being already defined</span>
  <span class="token keyword">new</span> <span class="token class-name">Watcher</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> updateComponent<span class="token punctuation">,</span> noop<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token function">before</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>vm<span class="token punctuation">.</span>_isMounted <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>vm<span class="token punctuation">.</span>_isDestroyed<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">callHook</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> <span class="token string">&#39;beforeUpdate&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">true</span> <span class="token comment">/* isRenderWatcher */</span><span class="token punctuation">)</span>
  hydrating <span class="token operator">=</span> <span class="token boolean">false</span>

  <span class="token comment">// manually mounted instance, call mounted on self</span>
  <span class="token comment">// mounted is called for render-created child components in its inserted hook</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>vm<span class="token punctuation">.</span>$vnode <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    vm<span class="token punctuation">.</span>_isMounted <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token function">callHook</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> <span class="token string">&#39;mounted&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> vm
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br></div></div><p>\u53EF\u4EE5\u770B\u5230\u5728<code>mountComponent</code>\u4E2D\u5206\u522B\u7528<code>callHook</code>\u56DE\u8C03\u4E86beforeMount\u548Cmounted\u8FD9\u4E24\u4E2A\u751F\u547D\u5468\u671F\uFF08<code>callHook(vm, &#39;beforeMount&#39;)</code>\u548C<code>callHook(vm, &#39;mounted&#39;)</code>\uFF09\uFF0C\u5206\u522B\u8868\u793A\u8FDB\u5165mount\u4E4B\u524D\u548Cmount\u4E4B\u540E\uFF0C\u4F46\u6838\u5FC3\u4EE3\u7801\u5B9E\u9645\u4E0A\u662F<code>updateComponent</code>\u548C<code>new Watcher</code>\u3002</p><p><code>updateComponent</code>\u662F\u89C6\u56FE\u8FDB\u884C\u66F4\u65B0\u7684\u903B\u8F91\uFF0C\u89C6\u56FE\u7684\u9996\u6B21\u6E32\u67D3\u5B9E\u9645\u4E0A\u4E5F\u53EF\u4EE5\u770B\u505A\u662F\u7279\u6B8A\u7684\u9875\u9762\u66F4\u65B0\uFF0C\u4ECE\u65E0\u8282\u70B9\u5230\u6709\u8282\u70B9\u7684\u4E00\u79CD\u66F4\u65B0\uFF0C\u56E0\u6B64\u8FD9\u91CC\u4E0D\u7BA1\u662F\u521D\u59CB\u5316\u89C6\u56FE\u6E32\u67D3\uFF0C\u8FD8\u662F\u540E\u7EED\u7684\u89C6\u56FE\u66F4\u65B0\uFF0C\u90FD\u8D70\u76F8\u540C\u7684<code>updateComponent</code>\u903B\u8F91\u5373\u53EF\u3002\u8FD9\u91CC<code>updateComponent</code>\u7684\u4E3B\u4F53\u903B\u8F91\u4E3B\u8981\u662F\u6E32\u67D3\u76F8\u5173\u7684\uFF0C\u8DDF\u54CD\u5E94\u5F0F\u7684\u5173\u7CFB\u4E0D\u662F\u975E\u5E38\u5BC6\u5207\uFF0C\u56E0\u6B64\u8FD9\u91CC\u4E0D\u8FC7\u591A\u5206\u6790\uFF1B\u53EA\u9700\u8981\u8BB0\u4F4F\u5728<code>updateComponent</code>\u903B\u8F91\u4E2D\u4F1A\u8BFB\u53D6\u6570\u636E\uFF0C\u5E76\u5EFA\u7ACB\u4F9D\u8D56\uFF0C\u540C\u65F6\u6570\u636E\u66F4\u65B0\u65F6\uFF0C\u4F1A\u91CD\u65B0\u89E6\u53D1<code>updateComponent</code>\u903B\u8F91\u5E76\u91CD\u65B0\u5EFA\u7ACB\u4F9D\u8D56\uFF0C\u5B8C\u6210\u6574\u4E2A\u54CD\u5E94\u5F0F\u903B\u8F91\u7684\u95ED\u73AF\u3002</p><h4 id="reactivegetter" tabindex="-1"><a class="header-anchor" href="#reactivegetter" aria-hidden="true">#</a> reactiveGetter</h4><p>TODO</p><h4 id="watcher" tabindex="-1"><a class="header-anchor" href="#watcher" aria-hidden="true">#</a> Watcher</h4><p>\u4E0A\u8FF0\u7EC4\u4EF6\u521D\u59CB\u5316\u9636\u6BB5\u8BF4\u5230\uFF0C\u6BCF\u4E2A\u6570\u636E\u5BF9\u8C61\u548C\u5BF9\u8C61\u5C5E\u6027\u90FD\u6709\u4E2A<code>Dep</code>\u5B9E\u4F8B\uFF0C\u6BCF\u4E2A<code>Dep</code>\u5B9E\u4F8B\u5B9E\u9645\u5C31\u4EE3\u8868\u4E86\u4E00\u4E2A\u6570\u636E\u5BF9\u5E94\u89C6\u56FE\u7684\u4E00\u5BF9\u591A\u7684\u4F9D\u8D56\u5173\u7CFB\uFF1B\u4F46\u4E0E\u4E4B\u76F8\u5BF9\u7684\uFF0C\u6BCF\u4E2A\u89C6\u56FE\u90FD\u4F1A\u4F9D\u8D56\u975E\u5E38\u591A\u7684\u6570\u636E\uFF0C\u4E00\u4E2A\u89C6\u56FE\u548C\u591A\u4E2A\u6570\u636E\u4E5F\u4F1A\u5F62\u6210\u4E00\u5BF9\u591A\u7684\u4F9D\u8D56\u5173\u7CFB\uFF0C\u56E0\u6B64\u89C6\u56FE\u548C\u6570\u636E\u7684\u5B9E\u9645\u5173\u7CFB\u662F\u4E2A\u591A\u5BF9\u591A\u7684\u5173\u7CFB\uFF0C\u4E00\u4E2A\u6570\u636E\u53EF\u4EE5\u5BF9\u5E94\u591A\u4E2A\u89C6\u56FE\uFF0C\u4E00\u4E2A\u89C6\u56FE\u4E5F\u53EF\u4EE5\u5BF9\u5E94\u591A\u4E2A\u6570\u636E\u3002</p><p>\u5728Vue\u4E2D\uFF0C\u5C31\u4F7F\u7528Watcher\u53BB\u7BA1\u7406\u6BCF\u4E2A\u89C6\u56FE\u5BF9\u5E94\u7684\u6570\u636E\u4F9D\u8D56\u5173\u7CFB\uFF0C\u5373\u6BCF\u4E2A\u7EC4\u4EF6\u5B9E\u4F8B\u90FD\u5BF9\u5E94\u4E00\u4E2AWatcher\u5B9E\u4F8B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// src/core/observer/watcher.js</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> queueWatcher <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./scheduler&#39;</span>
<span class="token keyword">import</span> Dep<span class="token punctuation">,</span> <span class="token punctuation">{</span> pushTarget<span class="token punctuation">,</span> popTarget <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./dep&#39;</span>

<span class="token keyword">import</span> type <span class="token punctuation">{</span> SimpleSet <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../util/index&#39;</span>

<span class="token keyword">let</span> uid <span class="token operator">=</span> <span class="token number">0</span>

<span class="token doc-comment comment">/**
 * A watcher parses an expression, collects dependencies,
 * and fires callback when the expression value changes.
 * This is used for both the $watch() api and directives.
 */</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">Watcher</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">vm</span><span class="token operator">:</span> Component<span class="token punctuation">;</span>
  <span class="token literal-property property">deps</span><span class="token operator">:</span> Array<span class="token operator">&lt;</span>Dep<span class="token operator">&gt;</span><span class="token punctuation">;</span>
  <span class="token literal-property property">newDeps</span><span class="token operator">:</span> Array<span class="token operator">&lt;</span>Dep<span class="token operator">&gt;</span><span class="token punctuation">;</span>
  <span class="token literal-property property">depIds</span><span class="token operator">:</span> SimpleSet<span class="token punctuation">;</span>
  <span class="token literal-property property">newDepIds</span><span class="token operator">:</span> SimpleSet<span class="token punctuation">;</span>
  <span class="token literal-property property">getter</span><span class="token operator">:</span> Function<span class="token punctuation">;</span>
  <span class="token literal-property property">value</span><span class="token operator">:</span> any<span class="token punctuation">;</span>

  <span class="token function">constructor</span> <span class="token punctuation">(</span>
    <span class="token parameter"><span class="token literal-property property">vm</span><span class="token operator">:</span> Component<span class="token punctuation">,</span>
    <span class="token literal-property property">expOrFn</span><span class="token operator">:</span> string <span class="token operator">|</span> Function<span class="token punctuation">,</span>
    <span class="token literal-property property">cb</span><span class="token operator">:</span> Function<span class="token punctuation">,</span>
    options<span class="token operator">?</span><span class="token operator">:</span> <span class="token operator">?</span>Object<span class="token punctuation">,</span>
    isRenderWatcher<span class="token operator">?</span><span class="token operator">:</span> boolean</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>vm <span class="token operator">=</span> vm
    <span class="token operator">...</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>deps <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>newDeps <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>depIds <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>newDepIds <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// parse expression for getter</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> expOrFn <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>getter <span class="token operator">=</span> expOrFn
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token operator">...</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lazy <span class="token operator">?</span> <span class="token keyword">undefined</span> <span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   * Evaluate the getter, and re-collect dependencies.
   */</span>
  <span class="token function">get</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">pushTarget</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
    <span class="token keyword">let</span> value
    <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>vm
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getter</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> vm<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>user<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">handleError</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> vm<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">getter for watcher &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>expression<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> e
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
      <span class="token comment">// &quot;touch&quot; every property so they are all tracked as</span>
      <span class="token comment">// dependencies for deep watching</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>deep<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">traverse</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token function">popTarget</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">cleanupDeps</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> value
  <span class="token punctuation">}</span>
      
  <span class="token doc-comment comment">/**
   * Add a dependency to this directive.
   */</span>
  <span class="token function">addDep</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">dep</span><span class="token operator">:</span> Dep</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> id <span class="token operator">=</span> dep<span class="token punctuation">.</span>id
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>newDepIds<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>newDepIds<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>newDeps<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>dep<span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>depIds<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        dep<span class="token punctuation">.</span><span class="token function">addSub</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   * Clean up for dependency collection.
   */</span>
  <span class="token function">cleanupDeps</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>deps<span class="token punctuation">.</span>length
    <span class="token keyword">while</span> <span class="token punctuation">(</span>i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> dep <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>deps<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>newDepIds<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>dep<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        dep<span class="token punctuation">.</span><span class="token function">removeSub</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> tmp <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>depIds
    <span class="token keyword">this</span><span class="token punctuation">.</span>depIds <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>newDepIds
    <span class="token keyword">this</span><span class="token punctuation">.</span>newDepIds <span class="token operator">=</span> tmp
    <span class="token keyword">this</span><span class="token punctuation">.</span>newDepIds<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    tmp <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>deps
    <span class="token keyword">this</span><span class="token punctuation">.</span>deps <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>newDeps
    <span class="token keyword">this</span><span class="token punctuation">.</span>newDeps <span class="token operator">=</span> tmp
    <span class="token keyword">this</span><span class="token punctuation">.</span>newDeps<span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br></div></div><p>Watcher\u7684\u6784\u9020\u51FD\u6570\u4E2D\uFF0C\u4E3B\u8981\u5E72\u4E86\u4E09\u4EF6\u4E8B\uFF1A</p><ol><li>\u5C06\u7EC4\u4EF6\u4E0EWatcher\u5B9E\u4F8B\u5EFA\u7ACB\u5173\u8054\uFF08<code>this.vm = vm</code>\uFF09</li><li>\u521D\u59CB\u5316<code>deps</code>\u3001<code>depIds</code>\u3001<code>newDeps</code>\u3001<code>newDepIds</code>\u7B49\u5C5E\u6027\uFF0C\u8FD9\u4E9B\u5C5E\u6027\u7528\u6765\u5B58\u50A8\u4F9D\u8D56\u5173\u7CFB\u548C\u4F9D\u8D56\u5173\u7CFBID\uFF0C\u662FWatcher\u7BA1\u7406\u7684\u5173\u952E\u6570\u636E</li><li>\u521D\u59CB\u5316getter\u51FD\u6570\u5E76\u8C03\u7528<code>get</code>\uFF0C\u5728<code>get</code>\u5185\u90E8\u8C03\u7528getter\u8FDB\u884C\u4F9D\u8D56\u6536\u96C6\u3002</li></ol><p>\u5176\u4E2D\u7B2C\u4E09\u6B65\u6700\u4E3A\u6CE8\u610F\u5728\u8FD9\u91CC\u8FD9\u4E2A<code>getter</code>\u5C31\u662Fmount\u9636\u6BB5\u4F20\u5165\u7684<code>updateComponent</code>\uFF0C\u4E5F\u5C31\u662F\u89C6\u56FE\u521D\u59CB\u5316\u548C\u66F4\u65B0\u7684\u903B\u8F91\uFF1B\u5728Watcher\u5185\u90E8\u547D\u540D\u4E3A<code>getter</code>\uFF0C\u610F\u5373\u5BF9\u4E8EWatcher\u6765\u8BF4\u8FD9\u4E2A\u53EA\u662F\u4E2A\u4F9D\u8D56\u6536\u96C6\u7684\u8FC7\u7A0B\u3002</p><p>\u968F\u540E\u8C03\u7528\u7684<code>get()</code>\uFF0C<code>get()</code>\u4E2D\u4E5F\u4E3B\u8981\u5E72\u4E86\u4E09\u4EF6\u4E8B\uFF1A</p><ol><li><p>\u8C03\u7528<code>pushTarget</code>\u548C\u5BF9\u5E94\u7684<code>popTarget</code>\uFF0C\u5C06\u8BE5Watcher\u5B9E\u4F8B\u538B\u5165\u548C\u5F39\u51FAWatcher\u6808</p><p>\u601D\u8003\u4E00\u4E2A\u95EE\u9898\uFF0C\u5728\u6E32\u67D3\u89C6\u56FE\u65F6\uFF0C\u8BFB\u53D6\u5230\u6570\u636E\u8981\u8FDB\u884C\u4F9D\u8D56\u6536\u96C6\u903B\u8F91\u65F6\uFF0C\u600E\u4E48\u80FD\u627E\u5230\u5F53\u524D\u89C6\u56FE\u5BF9\u5E94\u7684Watcher\u8FDB\u884C\u5173\u8054\uFF1F\u56E0\u4E3A\u8BFB\u53D6\u6570\u636E\u65F6\u8C03\u7528<code>reactiveGetter</code>\u662F\u4E2A\u6D4F\u89C8\u5668\u5C42\u9762\u7684\u64CD\u4F5C\uFF0C\u65E0\u6CD5\u901A\u8FC7\u4EE3\u7801\u8FDB\u884C\u5E72\u9884\uFF08\u6BD4\u5982\u901A\u8FC7\u5411<code>reactiveGetter</code>\u4F20\u53C2\uFF09\uFF0C\u8FD9\u91CCVue\u7684\u5B9E\u73B0\u5C31\u975E\u5E38\u7684\u5DE7\u5999\uFF08\u53C8\u4E00\u6B21\u7684\u5DE7\u5999\uFF09\u3002\u5F97\u76CA\u4E8EJS\u7684\u5355\u7EBF\u7A0B\u7279\u6027\uFF0C\u89C6\u56FE\u7684\u6E32\u67D3\u903B\u8F91\u662F\u4E00\u4E2A\u4E00\u4E2A\u6267\u884C\u7684\uFF0C\u4E5F\u5C31\u662F\u8BF4\u5728\u540C\u4E00\u65F6\u523B\u53EA\u4F1A\u6709\u4E00\u4E2A\u89C6\u56FE\u5728\u6E32\u67D3\uFF0C\u5373\u53EA\u4F1A\u6709\u4E00\u4E2A\u5F53\u524D\u6D3B\u8DC3\u89C6\u56FE\uFF0C\u4E5F\u53EA\u4F1A\u6709\u4E00\u4E2A\u6D3B\u8DC3Watcher\u3002Vue\u4E2D\u6784\u5EFA\u4E86\u4E00\u4E2AWatcher\u6808<code>targetStack</code>\u6765\u7EF4\u62A4\u9875\u9762\u6E32\u67D3\u6D41\u7A0B\u4E2D\u7684Watcher\uFF0C\u89C6\u56FE\u6E32\u67D3\u65F6\u5BF9\u5E94\u7684Watcher\u5165\u6808\u6210\u4E3A\u5F53\u524D\u6D3B\u8DC3Watcher\uFF0C\u5B58\u653E\u5728<code>Dep</code>\u7684\u9759\u6001\u5C5E\u6027<code>target</code>\u4E2D\uFF0C\u5047\u5982\u5F53\u524D\u89C6\u56FE\u6E32\u67D3\u8FD8\u672A\u5B8C\u6210\uFF0C\u4F46\u8FDB\u5165\u4E86\u5B50\u7EC4\u4EF6\u89C6\u56FE\u7684\u6E32\u67D3\u6D41\u7A0B\uFF0C\u5219\u5B50\u7EC4\u4EF6\u89C6\u56FE\u5BF9\u5E94\u7684Watcher\u5165\u6808\uFF1B\u89C6\u56FE\u5B8C\u6210\u6E32\u67D3\uFF0C\u5BF9\u5E94\u7684Watcher\u3002</p><p>\u518D\u56DE\u8FC7\u5934\u6765\u770B<code>dep.depend()</code>\u5185\u90E8\u7684\u5904\u7406\u903B\u8F91\u5C31\u80FD\u604D\u7136\u5927\u609F\uFF0C<code>dep.depend()</code>\u5185\u90E8\u7684\u903B\u8F91\u975E\u5E38\u7684\u7B80\u5355\uFF0C\u5224\u65AD\u662F\u5426\u6709\u6D3B\u8DC3\u7684Watcher\uFF0C\u6709\u7684\u8BDD\u5C31\u8C03\u7528Watcher\u5B9E\u4F8B\u7684<code>addDep</code>\uFF0C\u800C<code>addDep</code>\u5185\u90E8\u5C31\u662F\u8FDB\u884C\u4E86\u4F9D\u8D56\u7684\u5173\u8054\uFF0C\u5373\uFF0C\u5728Watcher\u5B9E\u4F8B\u4E2D\u5B58\u50A8<code>Dep</code>\u5B9E\u4F8B\uFF0C\u5728<code>Dep</code>\u5B9E\u4F8B\u4E2D\u5B58\u50A8Watcher\u5B9E\u4F8B</p></li><li><p>\u8C03\u7528<code>getter</code>\u5B8C\u6210\u4F9D\u8D56\u6536\u96C6\u903B\u8F91\uFF0C\u6CE8\u610F\u8FD9\u91CC\u7528\u4E86try/catch\u4E86\uFF0C\u56E0\u4E3A\u672C\u8D28\u4E0A\u8FD9\u91CC\u8C03\u7528\u7684\u662F\u5F00\u53D1\u8005\u7F16\u5199\u7684\u89C6\u56FE\u6E32\u67D3\u903B\u8F91\uFF0C\u6F5C\u5728\u51FA\u9519\u7684\u53EF\u80FD\u6027\u5927\u5927\u63D0\u5347\uFF0C\u4E3A\u4E86\u7EF4\u62A4\u4F9D\u8D56\u5173\u7CFB\u548CWatcher\u6808\u7684\u6B63\u786E\u6027\uFF0C\u5FC5\u7136\u8981\u8FDB\u884C\u5BB9\u9519\u5904\u7406</p></li><li><p>\u8C03\u7528<code>cleanupDeps</code>\u6E05\u7406\u65E7\u4F9D\u8D56\u5173\u7CFB\u3002\u6BCF\u4E00\u6B21\u6E32\u67D3\u90FD\u53EF\u80FD\u4F1A\u5BFC\u81F4\u4F9D\u8D56\u5173\u7CFB\u7684\u53D8\u52A8\uFF08\u6BD4\u5982\u521D\u59CB\u5316\u65F6\u4F9D\u8D56\u5173\u7CFB\u4ECE\u65E0\u5230\u6709\uFF0C\u6BD4\u5982v-if\u5BFC\u81F4\u90E8\u5206\u6570\u636E\u4E0D\u518D\u9700\u8981\u88AB\u4F9D\u8D56\uFF09\u3002\u8FD9\u4E5F\u662F\u4E3A\u4EC0\u4E48\u4F1A\u6709<code>deps</code>\u3001<code>depIds</code>\u3001<code>newDeps</code>\u3001<code>newDepIds</code>\u7B49\u65B0\u65E7\u4E24\u5957\u6570\u636E</p></li></ol><p>\u7531\u4E8E\u89C6\u56FE\u6E32\u67D3\u7684\u903B\u8F91\u5B9E\u9645\u662F\u5728Watcher\u7684\u6784\u9020\u51FD\u6570\u4E2D\u88AB\u8C03\u7528\u7684\uFF0C\u56E0\u6B64Watcher\u5B9E\u4F8B\u7684\u521D\u59CB\u5316\u7ED3\u675F\u4E4B\u540E\uFF0C\u89C6\u56FE\u7684\u6E32\u67D3\u4E5F\u5C31\u57FA\u672C\u5B8C\u6210\u4E86</p><h3 id="notify\u6D3E\u53D1\u66F4\u65B0" tabindex="-1"><a class="header-anchor" href="#notify\u6D3E\u53D1\u66F4\u65B0" aria-hidden="true">#</a> Notify\u6D3E\u53D1\u66F4\u65B0</h3><p>\u5728\u54CD\u5E94\u5F0F\u6570\u636E\u548C\u4F9D\u8D56\u6536\u96C6\u5B8C\u6BD5\u7684\u57FA\u7840\u4E0A\uFF0C\u5C31\u53EF\u4EE5\u5728\u6570\u636E\u66F4\u65B0\u65F6\uFF0C\u901A\u77E5\u76F8\u5E94\u7684Watcher\u5B9E\u4F8B\u8FDB\u800C\u89E6\u53D1\u89C6\u56FE\u66F4\u65B0</p><h4 id="reactivesetter" tabindex="-1"><a class="header-anchor" href="#reactivesetter" aria-hidden="true">#</a> reactiveSetter</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token function">reactiveSetter</span> <span class="token punctuation">(</span><span class="token parameter">newVal</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> value <span class="token operator">=</span> getter <span class="token operator">?</span> <span class="token function">getter</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">:</span> val
    <span class="token comment">/* eslint-disable no-self-compare */</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>newVal <span class="token operator">===</span> value <span class="token operator">||</span> <span class="token punctuation">(</span>newVal <span class="token operator">!==</span> newVal <span class="token operator">&amp;&amp;</span> value <span class="token operator">!==</span> value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    <span class="token comment">/* eslint-enable no-self-compare */</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span> <span class="token operator">&amp;&amp;</span> customSetter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">customSetter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// #7981: for accessor properties without setter</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>getter <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>setter<span class="token punctuation">)</span> <span class="token keyword">return</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>setter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">setter</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> newVal<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        val <span class="token operator">=</span> newVal
    <span class="token punctuation">}</span>
    childOb <span class="token operator">=</span> <span class="token operator">!</span>shallow <span class="token operator">&amp;&amp;</span> <span class="token function">observe</span><span class="token punctuation">(</span>newVal<span class="token punctuation">)</span>
    dep<span class="token punctuation">.</span><span class="token function">notify</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>\u6570\u636E\u7684\u66F4\u65B0\u76F4\u63A5\u4F1A\u89E6\u53D1\u76F8\u5E94\u5C5E\u6027\u7684<code>reactiveSetter</code>\u51FD\u6570\uFF0C<code>reactiveSetter</code>\u51FD\u6570\u4E3B\u8981\u505A\u4E86\u56DB\u4EF6\u4E8B\uFF1A</p><ol><li>\u83B7\u5F97\u65E7\u503C\uFF0C\u5224\u65AD\u65B0\u65E7\u503C\u662F\u5426\u5B8C\u5168\u4E00\u81F4\u3002\u4E2A\u4EBA\u611F\u89C9\u8FD9\u7B97\u662F\u4E00\u79CD\u4F18\u5316\uFF0C\u901A\u5E38\u80AF\u5B9A\u662F\u6570\u636E\u4EA7\u751F\u53D8\u5316\uFF0C\u624D\u4F1A\u8FDB\u884C\u6570\u636E\u66F4\u65B0\uFF0C\u57FA\u672C\u90FD\u662F\u8BEF\u64CD\u4F5C\u624D\u4F1A\u5BFC\u81F4\u8D4B\u503C\u76F8\u540C\u7684\u60C5\u51B5\u3002\u53E6\u5916\u6CE8\u610F<code>newVal !== newVal &amp;&amp; value !== value</code>\uFF0C\u5B9E\u9645\u662F\u5BF9<code>NaN</code>\u7684\u7279\u6B8A\u5224\u65AD</li><li>\u5904\u7406\u6709<code>getter</code>\u5374\u6CA1\u6709<code>setter</code>\u7684\u6781\u7AEF\u60C5\u51B5\uFF0C\u5373\u6307\u5B9A\u4E86\u5F53\u524D\u5C5E\u6027\u662F\u53EA\u8BFB\u7684\uFF0C\u6570\u636E\u53EA\u8BFB\u4E0D\u80FD\u66F4\u65B0\u81EA\u7136\u4E0D\u80FD\u89E6\u53D1\u89C6\u56FE\u91CD\u6E32\u67D3\uFF0C\u76F4\u63A5\u8FD4\u56DE\u5373\u53EF</li><li>\u8BBE\u7F6E\u65B0\u503C\uFF0C\u6709<code>setter</code>\u7684\u8C03\u7528<code>setter</code>\u8BBE\u7F6E\uFF0C\u6CA1\u6709\u7684\u76F4\u63A5\u8D4B\u503C\u5373\u53EF</li><li>\u6D3E\u53D1\u66F4\u65B0\uFF0C\u6700\u6838\u5FC3\u7684\u6B65\u9AA4\uFF0C\u8C03\u7528<code>dep.notify()</code>\u89E6\u53D1\u66F4\u65B0</li></ol><p>\u4E0B\u9762\u6211\u4EEC\u770B\u770B\u4E2D\u505A\u4E86\u4EC0\u4E48</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">notify</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// stabilize the subscriber list first</span>
    <span class="token keyword">const</span> subs <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>subs<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>config<span class="token punctuation">.</span>async<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// subs aren&#39;t sorted in scheduler if not running async</span>
        <span class="token comment">// we need to sort them now to make sure they fire in correct</span>
        <span class="token comment">// order</span>
        subs<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>id <span class="token operator">-</span> b<span class="token punctuation">.</span>id<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> l <span class="token operator">=</span> subs<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> l<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        subs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u6838\u5FC3\u5C31\u4E00\u53E5\uFF0C<code>subs[i].update()</code>\uFF0C\u4E4B\u524D\u6211\u4EEC\u63D0\u5230<code>subs</code>\u5C31\u662F\u8BA2\u9605\u8005\u5217\u8868\uFF0C\u4E5F\u5C31\u662F\u4F9D\u8D56\u8BE5\u6570\u636E\u7684\u89C6\u56FE\u5BF9\u5E94\u7684Watcher\u5B9E\u4F8B\u5217\u8868\uFF0C\u6240\u4EE5\u8FD9\u91CC\u5B9E\u9645\u5C31\u662F\u904D\u5386\u6BCF\u4E00\u4E2A\u4F9D\u8D56\u7684Watcher\u5B9E\u4F8B\uFF0C\u8C03\u7528\u5176<code>update()</code>\u51FD\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
* Subscriber interface.
* Will be called when a dependency changes.
*/</span>
<span class="token function">update</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">/* istanbul ignore else */</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>lazy<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>dirty <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>sync<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">queueWatcher</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>\u6216\u5EF6\u8FDF\u6267\u884C\uFF0C\u6216\u540C\u6B65\u6267\u884C\uFF0C\u8FD9\u4E24\u79CD\u60C5\u51B5\u90FD\u4E0D\u662F\u666E\u904D\u60C5\u51B5\uFF0C\u6700\u6838\u5FC3\u7684\u8FD8\u662F<code>queueWatcher</code>\uFF0C\u8981\u9700\u8981\u66F4\u65B0\u7684Watcher\u5B9E\u4F8B\u63A8\u5165\u5F02\u6B65\u4EFB\u52A1\u961F\u5217\u8FDB\u884C\u66F4\u65B0</p><h4 id="\u5F02\u6B65\u66F4\u65B0\u961F\u5217" tabindex="-1"><a class="header-anchor" href="#\u5F02\u6B65\u66F4\u65B0\u961F\u5217" aria-hidden="true">#</a> \u5F02\u6B65\u66F4\u65B0\u961F\u5217</h4><p>Vue\u5728\u66F4\u65B0\u89C6\u56FE\u65F6\u662F\u5F02\u6B65\u6267\u884C\u7684\u3002\u9700\u8981\u66F4\u65B0\u7684Watcher\u5B9E\u4F8B\u4F1A\u88AB\u63A8\u5165\u5230\u961F\u5217\u4E2D\uFF0C\u5982\u679C\u540C\u4E00\u4E2A watcher \u88AB\u591A\u6B21\u901A\u77E5\uFF08notify\uFF09\uFF0C\u53EA\u4F1A\u88AB\u63A8\u5165\u5230\u961F\u5217\u4E2D\u4E00\u6B21\u3002\u5728\u7F13\u51B2\u65F6\u53BB\u9664\u91CD\u590D\u6570\u636E\u5BF9\u4E8E\u907F\u514D\u4E0D\u5FC5\u8981\u7684\u8BA1\u7B97\u548C DOM \u64CD\u4F5C\u662F\u975E\u5E38\u91CD\u8981\u7684\uFF0C\u800C\u4E14\u672C\u8D28\u4E0A\u89C6\u56FE\u91CD\u6E32\u67D3\u4F1A\u6E32\u67D3\u6240\u6709\u6570\u636E\uFF0C\u5373\u4FBFwatcher\u88AB\u591A\u6B21\u89E6\u53D1\u7684\u6570\u636E\u662F\u4E0D\u540C\u7684\uFF0C\u53EA\u5C06Watcher\u5B9E\u4F8B\u63A8\u5165\u961F\u5217\u4E00\u6B21\u5728\u903B\u8F91\u4E0A\u4E5F\u6CA1\u6709\u95EE\u9898\u3002</p><p>\u7136\u540E\uFF0C\u5728\u4E0B\u4E00\u4E2A\u7684\u4E8B\u4EF6\u5FAA\u73AF\u4E2D\uFF0CVue \u5237\u65B0\u961F\u5217\u5E76\u6267\u884C\u5B9E\u9645\u6E32\u67D3\u5DE5\u4F5C\u3002Vue \u5728\u5185\u90E8\u5BF9\u5F02\u6B65\u961F\u5217\u5C1D\u8BD5\u4F7F\u7528\u539F\u751F\u7684 <code>Promise.then</code>\u3001<code>MutationObserver</code> \u548C <code>setImmediate</code>\uFF0C\u5982\u679C\u6267\u884C\u73AF\u5883\u4E0D\u652F\u6301\uFF0C\u5219\u4F1A\u91C7\u7528 <code>setTimeout(fn, 0)</code> \u4EE3\u66FF</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token literal-property property">queue</span><span class="token operator">:</span> Array<span class="token operator">&lt;</span>Watcher<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment">// \u5F02\u6B65\u66F4\u65B0</span>

<span class="token doc-comment comment">/**
 * Push a watcher into the watcher queue.
 * Jobs with duplicate IDs will be skipped unless it&#39;s
 * pushed when the queue is being flushed.
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">queueWatcher</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">watcher</span><span class="token operator">:</span> Watcher</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> id <span class="token operator">=</span> watcher<span class="token punctuation">.</span>id
  <span class="token keyword">if</span> <span class="token punctuation">(</span>has<span class="token punctuation">[</span>id<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    has<span class="token punctuation">[</span>id<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>flushing<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>watcher<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// if already flushing, splice the watcher based on its id</span>
      <span class="token comment">// if already past its id, it will be run next immediately.</span>
      <span class="token keyword">let</span> i <span class="token operator">=</span> queue<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span>
      <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;</span> index <span class="token operator">&amp;&amp;</span> queue<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>id <span class="token operator">&gt;</span> watcher<span class="token punctuation">.</span>id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        i<span class="token operator">--</span>
      <span class="token punctuation">}</span>
      queue<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> watcher<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// queue the flush</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>waiting<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      waiting <span class="token operator">=</span> <span class="token boolean">true</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>config<span class="token punctuation">.</span>async<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">flushSchedulerQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span>
      <span class="token punctuation">}</span>
      <span class="token function">nextTick</span><span class="token punctuation">(</span>flushSchedulerQueue<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><p><code>queueWatcher</code>\u7684\u5177\u4F53\u903B\u8F91\u5982\u4E0B</p><ul><li>\u901A\u8FC7<code>has</code>\u5224\u65ADwatcher\u662F\u5426\u5DF2\u7ECF\u88AB\u63A8\u5165\u5230\u961F\u5217\u4E2D\u4E86</li><li>\u901A\u8FC7<code>flushing</code>\u5224\u65AD\u662F\u5426\u961F\u5217\u662F\u5426\u6B63\u5728\u8FDB\u884C\u6D3E\u53D1\u66F4\u65B0\uFF0C\u5982\u679C\u6CA1\u6709\uFF0C\u5219\u76F4\u63A5\u63A8\u5165\u961F\u5217\u5373\u53EF\uFF0C\u5982\u679C\u6B63\u5728\u6D3E\u53D1\uFF0C\u5219\u6309\u7167\u987A\u5E8F\u63D2\u5165\u5BF9\u5E94\u4F4D\u7F6E</li><li>\u901A\u8FC7<code>waiting</code>\u5224\u65AD\u6D3E\u53D1\u66F4\u65B0\u662F\u5426\u5DF2\u7ECF\u8FDB\u5165\u6D4F\u89C8\u5668\u7684\u5F02\u6B65\u4E8B\u4EF6\u5FAA\u73AF\u4E2D\uFF0C\u5982\u679C\u6CA1\u6709\uFF0C\u5219\u8FDB\u5165\uFF0C\u6BD5\u7ADF\u5DF2\u7ECF\u6709\u66F4\u65B0\u9700\u8981\u5F00\u59CB\u6D3E\u53D1\u4E86\u3002\u901A\u8FC7<code>nextTick</code>\u5C06\u6D3E\u53D1\u903B\u8F91\u63A8\u9001\u5230\u5F02\u6B65\u4EFB\u52A1\u4E2D\uFF0C\u4E5F\u5C31\u662F<code>flushSchedulerQueue</code>\uFF0C\u4E0B\u9762\u770B\u770B<code>flushSchedulerQueue</code>\u505A\u4E86\u4E9B\u4EC0\u4E48</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * Flush both queues and run the watchers.
 */</span>
<span class="token keyword">function</span> <span class="token function">flushSchedulerQueue</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  flushing <span class="token operator">=</span> <span class="token boolean">true</span>
  <span class="token keyword">let</span> watcher<span class="token punctuation">,</span> id

  <span class="token comment">// Sort queue before flush.</span>
  <span class="token comment">// This ensures that:</span>
  <span class="token comment">// 1. Components are updated from parent to child. (because parent is always</span>
  <span class="token comment">//    created before the child)</span>
  <span class="token comment">// 2. A component&#39;s user watchers are run before its render watcher (because</span>
  <span class="token comment">//    user watchers are created before the render watcher)</span>
  <span class="token comment">// 3. If a component is destroyed during a parent component&#39;s watcher run,</span>
  <span class="token comment">//    its watchers can be skipped.</span>
  queue<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>id <span class="token operator">-</span> b<span class="token punctuation">.</span>id<span class="token punctuation">)</span>

  <span class="token comment">// do not cache length because more watchers might be pushed</span>
  <span class="token comment">// as we run existing watchers</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span>index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> queue<span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    watcher <span class="token operator">=</span> queue<span class="token punctuation">[</span>index<span class="token punctuation">]</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>watcher<span class="token punctuation">.</span>before<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      watcher<span class="token punctuation">.</span><span class="token function">before</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    id <span class="token operator">=</span> watcher<span class="token punctuation">.</span>id
    has<span class="token punctuation">[</span>id<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">null</span>
    watcher<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// in dev build, check and stop circular updates.</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span> <span class="token operator">&amp;&amp;</span> has<span class="token punctuation">[</span>id<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      circular<span class="token punctuation">[</span>id<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>circular<span class="token punctuation">[</span>id<span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>circular<span class="token punctuation">[</span>id<span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token constant">MAX_UPDATE_COUNT</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">warn</span><span class="token punctuation">(</span>
          <span class="token string">&#39;You may have an infinite update loop &#39;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>
            watcher<span class="token punctuation">.</span>user
              <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">in watcher with expression &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>watcher<span class="token punctuation">.</span>expression<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span><span class="token template-punctuation string">\`</span></span>
              <span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">in a component render function.</span><span class="token template-punctuation string">\`</span></span>
          <span class="token punctuation">)</span><span class="token punctuation">,</span>
          watcher<span class="token punctuation">.</span>vm
        <span class="token punctuation">)</span>
        <span class="token keyword">break</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// keep copies of post queues before resetting state</span>
  <span class="token keyword">const</span> activatedQueue <span class="token operator">=</span> activatedChildren<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> updatedQueue <span class="token operator">=</span> queue<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token function">resetSchedulerState</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token comment">// call component updated and activated hooks</span>
  <span class="token function">callActivatedHooks</span><span class="token punctuation">(</span>activatedQueue<span class="token punctuation">)</span>
  <span class="token function">callUpdatedHooks</span><span class="token punctuation">(</span>updatedQueue<span class="token punctuation">)</span>

  <span class="token comment">// devtool hook</span>
  <span class="token comment">/* istanbul ignore if */</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>devtools <span class="token operator">&amp;&amp;</span> config<span class="token punctuation">.</span>devtools<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    devtools<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;flush&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br></div></div><p>\u9996\u5148\u5BF9<code>queue</code>\u8FDB\u884C\u4E86\u6392\u5E8F\uFF0C\u8FD9\u4E2A\u6392\u5E8F\u6781\u4E3A\u91CD\u8981\uFF0C\u6392\u5E8F\u4E3B\u8981\u6709\u4E09\u4E2A\u76EE\u7684</p><ul><li>\u7EC4\u4EF6\u7684\u66F4\u65B0\u7531\u7236\u5230\u5B50\uFF1B\u56E0\u4E3A\u7236\u7EC4\u4EF6\u7684\u521B\u5EFA\u8FC7\u7A0B\u662F\u5148\u4E8E\u5B50\u7684\uFF0C\u6240\u4EE5 watcher \u7684\u521B\u5EFA\u4E5F\u662F\u5148\u7236\u540E\u5B50\uFF0C\u6267\u884C\u987A\u5E8F\u4E5F\u5E94\u8BE5\u4FDD\u6301\u5148\u7236\u540E\u5B50\u3002</li><li>\u7528\u6237\u7684\u81EA\u5B9A\u4E49 watcher \u8981\u4F18\u5148\u4E8E\u6E32\u67D3 watcher \u6267\u884C\uFF1B\u56E0\u4E3A\u7528\u6237\u81EA\u5B9A\u4E49 watcher \u662F\u5728\u6E32\u67D3 watcher \u4E4B\u524D\u521B\u5EFA\u7684\u3002</li><li>\u5982\u679C\u4E00\u4E2A\u7EC4\u4EF6\u5728\u7236\u7EC4\u4EF6\u7684 watcher \u6267\u884C\u671F\u95F4\u88AB\u9500\u6BC1\uFF0C\u90A3\u4E48\u5B83\u5BF9\u5E94\u7684 watcher \u6267\u884C\u90FD\u53EF\u4EE5\u88AB\u8DF3\u8FC7\uFF0C\u6240\u4EE5\u7236\u7EC4\u4EF6\u7684 watcher \u5E94\u8BE5\u5148\u6267\u884C\u3002</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
* Scheduler job interface.
* Will be called by the scheduler.
* \u7531scheduler\u8C03\u5EA6\u5668\u8C03\u7528\uFF0C\u5B9E\u9645\u53BB\u89E6\u53D1\u4F9D\u8D56\u6536\u96C6\u7684\u6267\u884C
*/</span>
<span class="token function">run</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>active<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>
            value <span class="token operator">!==</span> <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">||</span>
            <span class="token comment">// Deep watchers and watchers on Object/Arrays should fire even</span>
            <span class="token comment">// when the value is the same, because the value may</span>
            <span class="token comment">// have mutated.</span>
            <span class="token function">isObject</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">||</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>deep
        <span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// set new value</span>
            <span class="token keyword">const</span> oldValue <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>value
            <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>user<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">cb</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>vm<span class="token punctuation">,</span> value<span class="token punctuation">,</span> oldValue<span class="token punctuation">)</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">handleError</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>vm<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">callback for watcher &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>expression<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">cb</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>vm<span class="token punctuation">,</span> value<span class="token punctuation">,</span> oldValue<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><p>\u6392\u5E8F\u4E4B\u540E\u6267\u884C<code>watcher.run()</code>\uFF0C<code>watcher.run()</code>\u9996\u5148\u4F1A\u6267\u884C<code>get()</code>\uFF0C\u4E5F\u5C31\u662F\u8BF4\u8DDF\u521D\u59CB\u5316\u65F6\u6267\u884C\u4E86\u76F8\u540C\u7684\u903B\u8F91\uFF0C\u89E6\u53D1\u89C6\u56FE\u66F4\u65B0\u3002\u4E4B\u540E\u6839\u636E\u4E00\u5B9A\u7684\u5224\u65AD\u89C4\u5219\uFF0C\u6267\u884C\u76F8\u5E94\u7684\u56DE\u8C03\u51FD\u6570<code>cb</code>\u3002</p><p>\u81F3\u6B64\uFF0C\u6570\u636E\u7684\u66F4\u65B0\u6D3E\u53D1\u4E5F\u901A\u77E5\u5230\u4E86\u5404\u4E2A\u7EC4\u4EF6\uFF0C\u5BF9\u5E94\u7684\u89C6\u56FE\u9700\u8981\u8FDB\u884C\u76F8\u5E94\u7684\u66F4\u65B0\u6E32\u67D3\uFF0C\u91CD\u65B0\u4F9D\u8D56\u6536\u96C6\uFF0C\u51C6\u5907\u7740\u4E0B\u4E00\u6B21\u7684\u66F4\u65B0\u6E32\u67D3</p><h2 id="\u539F\u7406\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u539F\u7406\u603B\u7ED3" aria-hidden="true">#</a> \u539F\u7406\u603B\u7ED3</h2><p>\u901A\u8FC7\u4E0A\u8FF0\u7684\u4EE3\u7801\u53CA\u539F\u7406\u5206\u6790\uFF0C\u53EF\u4EE5\u770B\u5230\u4E3A\u4E86\u5B9E\u73B0\u76D1\u542C\u6570\u636E\u52A8\u6001\u53D8\u5316\u6765\u8FDB\u884C\u5BF9\u5E94\u7684\u89C6\u56FE\u6E32\u67D3\u53CA\u5176\u4ED6\u64CD\u4F5C\uFF0CVue\u4E3A\u6BCF\u4E00\u4E2A\u6570\u636E\u5BF9\u8C61\u53CA\u5BF9\u8C61\u5C5E\u6027\u90FD\u95ED\u5305\u4E86\u4E00\u4E2ADep\u5B9E\u4F8B\u7528\u4E8E\u7BA1\u7406\u6570\u636E\u4E0E\u89C6\u56FE\u7684\u4E00\u5BF9\u591A\u4F9D\u8D56\u5173\u7CFB\uFF0C\u4E3A\u6BCF\u4E00\u4E2A\u7EC4\u4EF6\u90FD\u521B\u5EFA\u4E86\u4E00\u4E2AWatcher\u5B9E\u4F8B\u4F5C\u4E3A\u8BA2\u9605\u8005\u8BA2\u9605\u6240\u6709\u4F9D\u8D56\u7684\u6570\u636E\u3002\u6E32\u67D3\u65F6\u901A\u8FC7\u6570\u636E\u4E2D\u7684<code>reactiveGetter</code>\u5C5E\u6027\u65B9\u6CD5\u6765\u6536\u96C6\u4F9D\u8D56\uFF0C\u6570\u636E\u66F4\u65B0\u65F6\u901A\u8FC7\u5176<code>reactiveSetter</code>\u5C5E\u6027\u65B9\u6CD5\u6765\u901A\u77E5\u5230\u5BF9\u5E94\u7684Watcher\u5B9E\u4F8B\u53BB\u505A\u76F8\u5E94\u7684\u66F4\u65B0\u64CD\u4F5C\u6216\u6267\u884C\u67D0\u4E2A\u56DE\u8C03\u51FD\u6570\uFF0C\u4ECE\u800C\u5B9E\u73B0\u6574\u4E2A\u6570\u636E\u54CD\u5E94\u5F0F\u7684\u5B8C\u6574\u95ED\u73AF\u903B\u8F91\uFF0C\u5389\u5BB3\uFF01</p>`,89);function e(t,o){return p}var r=s(a,[["render",e]]);export{r as default};
